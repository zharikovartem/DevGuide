{"version":3,"sources":["components/code/CodeLine.js","components/files/FileContainer.js","components/files/Store.js","components/files/Reducer.js","components/files/ApiComponent.js","components/code/Tab.js","components/code/UrlCopyed.js","components/reactComponent/ComponentNameForm.js","components/reactComponent/CreatingNewFiles.js","components/reactComponent/ReactComponent.js","components/Laravel/Laravel.js","components/Git/Git.js","api/redmineApi.ts","Redux/redmineReducer.ts","components/Redmine/RedmineLogin/RedmineLoginForm.tsx","components/Redmine/RedmineLogin/RedmineLoginFormContainer.tsx","components/Redmine/RedmineLogin/RedmineLogin.tsx","components/Redmine/Redmine.tsx","components/main.js","App.js","reportWebVitals.js","utils/FormRow/FormRow.tsx","components/Scheduling/SchedulingForm/SchedulingCRUDForm.tsx","components/Scheduling/SchedulingForm/SchedulingModal.tsx","components/Scheduling/SchedulingHelper.ts","components/Scheduling/SchedulingRow/ActionsMenu.tsx","components/Scheduling/SchedulingList/SchedulingList.tsx","components/Scheduling/SchedulingRow/SchedulingRow.tsx","components/Scheduling/SchedulingRow/SchedulingRowWraper.tsx","components/Scheduling/Scheduling.tsx","components/Data/DataList/DataList.tsx","components/Data/Data.tsx","Redux/dataReducer.ts","Redux/store.ts","components/Selary/ProjectRow/ProjectRow.tsx","components/Selary/Selary.tsx","index.js"],"names":["Tab","props","res","index","i","push","CodeLine","tab","value","Panel","Collapse","FileContainer","targ","useRef","collapsed","defaultActiveKey","header","name","className","size","onClick","navigator","clipboard","writeText","current","innerText","message","success","ref","body","StoreBody","console","log","id","componentName","toLowerCase","slice","StoreComponent","ReducerBody","isCRUD","toUpperCase","ReducerComponent","ApiBody","ApiComponent","UrlCopyed","pre","CopyOutlined","descriptions","layout","labelCol","span","wrapperCol","tailLayout","offset","ComponentNameForm","initialValues","remember","onFinish","onFinishFailed","errorInfo","Item","label","rules","required","valuePropName","type","htmlType","CreatingNewFiles","comandLine","isApi","isReducer","getComandLine","ReactComponent","useState","state","setState","store","setStore","values","Reducer","Store","Laravel","CodeToPackege","Git","redmineAPI","xhr","XMLHttpRequest","open","send","onreadystatechange","readyState","status","statusText","JSON","parse","responseText","initialState","userLogin","userPassword","actions","credentials","redmineReducer","action","login","password","RedmineLoginForm","setCredentials","checkCreds","autoComplete","Password","connect","dispatch","getState","a","RedmineLogin","isOpen","isModalVisible","setIsModalVisible","useEffect","title","visible","onOk","handleOk","onCancel","handleCancel","Redmine","isRedmineModalOpen","setIsRedmineModalOpen","Main","copy","href","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","TreeNode","TreeSelect","FormRow","xs","isButton","direction","style","width","component","Input","InputNumber","Select","getComponent","placeholder","hasFeedback","styled","with","onChange","getContent","SchedulingCRUDForm","onSubmit","handleSubmit","SchedulingModal","undefined","enableReinitialize","createSchedulingTree","schedulingArray","targetIndex","response","childs","parentArray","forEach","item","parentIndex","pp","toString","includes","filter","resItem","resIndex","ActionsMenu","e","key","newData","localStorage","getItem","parseInt","sort","b","setItem","stringify","onUpdate","length","alert","items","icon","UpCircleTwoTone","DownCircleTwoTone","FileAddTwoTone","SchedulingList","bordered","dataSource","data","renderItem","SchedulingRow","useCollapse","getCollapseProps","getToggleProps","isExpanded","shape","top","RightCircleTwoTone","splice","handleDelete","DeleteTwoTone","Button","overlay","SchedulingRowWraper","Scheduling","setIsOpen","setData","updatedData","onConfirm","removeItem","okText","cancelText","danger","DataList","columns","dataIndex","render","text","target","Data","dataReducer","rootReducer","combineReducers","createStore","applyMiddleware","thunkMiddleware","ProjectRow","project","onTimeChange","trackedTime","Selary","projects","setProjects","totalTime","setTotalTime","monthTime","setMonthTime","total","projectsCopy","projectName","orientation","SaveOutlined","onMonthTimeChange","footer","toFixed","TabPane","Tabs","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.b9a8a511.chunk.js","sourcesContent":["import React from 'react'\n\nconst Tab = (props) => {\n    let res = [];\n    for (let index = 0; index < props.i; index++) {\n        res.push(<span key={props.i}>&#160;&#160;&#160;&#160;</span>)\n    }\n    return res;\n}\n\n// <CodeLine tab=\"0\" />\nconst CodeLine = (props) => {\n    return (\n        <>\n            {props.tab ? <Tab i={props.tab}></Tab> : null}\n            <code>{props.value}</code>\n            <br/>\n        </>\n    )\n}\n\nexport default CodeLine;","import React, { useRef } from 'react';\nimport CodeLine from '../code/CodeLine';\nimport { Collapse, Button, message } from 'antd';\n\nconst { Panel } = Collapse;\n\nconst blockHeader = (name, onCopy) => {\n    return (\n        <>\n            {name}\n            <div className=\"float-right\">\n                <Button size=\"small\" onClick={onCopy}>Copy</Button>\n            </div>\n        </>\n    )\n}\n\nconst FileContainer = (props) => {\n\n    const targ = useRef();\n\n    const onCopy = () => {\n        navigator.clipboard.writeText(targ.current.innerText)\n        message.success(props.name + ' скопирован!')\n    }\n\n    if (props.collapsed) {\n        return (\n            <Collapse defaultActiveKey={[]} >\n                <Panel\n                    // header={blockHeader(props.name, onCopy)} \n                    header={props.name}\n                >\n                    <div className=\"float-right\">\n                        <Button size=\"small\" onClick={onCopy}>Copy</Button>\n                    </div>\n                    <div\n                        className=\"test\"\n                        ref={targ}\n                    >\n                        {props.body}\n                    </div>\n\n                </Panel>\n            </Collapse>\n        )\n    } else {\n        return props.body\n    }\n}\n\nexport default FileContainer;\n","import React from 'react';\nimport CodeLine from '../code/CodeLine';\nimport { Collapse, Button, message} from 'antd';\nimport FileContainer from './FileContainer';\n\nconst { Panel } = Collapse;\n\nconst StoreBody = (props) => {\n    console.log(props)\n    return (\n        <div id=\"123\">\n            <CodeLine tab=\"0\" value=\"import { createStore, combineReducers, applyMiddleware } from 'redux';\" />\n            <CodeLine tab=\"0\" value={'import '+props.componentName[0].toLowerCase()+props.componentName.slice(1)+'Reducer from \"./'+props.componentName[0].toLowerCase()+props.componentName.slice(1)+'Reducer\"'} />\n            <CodeLine tab=\"0\" value=\"import thunkMiddleware from 'redux-thunk';\" />\n            {/* <CodeLine tab=\"0\" value=\"import permissionReducer from './permissionsReducer';\" />\n            <CodeLine tab=\"0\" value=\"import productReducer from './productReducer';\" />\n            <CodeLine tab=\"0\" value=\"import toDoReducer from './toDoReducer';\" /> */}\n            <br />\n            <CodeLine tab=\"0\" value=\"let redusers = combineReducers({\" />\n            <CodeLine tab=\"1\" value={props.componentName[0].toLowerCase()+props.componentName.slice(1)+': '+props.componentName[0].toLowerCase()+props.componentName.slice(1)+'Reducer,'} />\n            {/* <CodeLine tab=\"1\" value=\"permissions: permissionReducer,\" />\n            <CodeLine tab=\"1\" value=\"products: productReducer,\" />\n            <CodeLine tab=\"1\" value=\"toDo: toDoReducer,\" /> */}\n            <CodeLine tab=\"0\" value=\"});\" />\n            <br />\n            <CodeLine tab=\"0\" value=\"let store = createStore(redusers, applyMiddleware(thunkMiddleware));\" />\n            <br />\n            <CodeLine tab=\"0\" value=\"export default store;\" />\n        </div>\n    )\n}\nconst StoreComponent = (props) => {\n    return <FileContainer name=\"store.js\" collapsed={props.collapsed} body={<StoreBody componentName={props.componentName}/>}/>\n}\n\nexport default StoreComponent;\n\n","import React from 'react';\nimport CodeLine from '../code/CodeLine';\nimport FileContainer from './FileContainer';\n\n\nconst ReducerBody = (props) => {\n    console.log(props)\n    return (\n        <>\n            <CodeLine tab=\"0\" value=\"import {testAPI} from './../api/api'\" />\n            <br />\n            {props.isCRUD ?\n            <>\n            <CodeLine tab=\"0\" value={'const SET_'+props.componentName.toUpperCase()+'_LIST = \"SET_'+props.componentName.toUpperCase()+'_LIST\"'} />\n            {/* <CodeLine tab=\"0\" value=\"const TEST_CONSTANT = 'TEST_CONSTANT'\" />\n            <CodeLine tab=\"0\" value=\"const TEST_CONSTANT = 'TEST_CONSTANT'\" />\n            <CodeLine tab=\"0\" value=\"const TEST_CONSTANT = 'TEST_CONSTANT'\" /> */}\n            </>\n            :\n            <CodeLine tab=\"0\" value=\"const TEST_CONSTANT = 'TEST_CONSTANT'\" />\n            }\n            <br />\n            <CodeLine tab=\"0\" value=\"let initialState = {\" />\n            <CodeLine tab=\"1\" value={props.componentName[0].toLowerCase()+props.componentName.slice(1)+'List: null,'} />\n            <CodeLine tab=\"0\" value=\"}\" />\n            <br />\n            <CodeLine tab=\"0\" value={'const '+props.componentName[0].toLowerCase()+props.componentName.slice(1)+'Reducer = (state = initialState, action) => {'} />\n            <CodeLine tab=\"1\" value=\"let stateCopy= { ...state }\" />\n            <CodeLine tab=\"1\" value=\"switch (action.type) {\" />\n            <CodeLine tab=\"2\" value={'case SET_'+props.componentName.toUpperCase()+'_LIST:'} />\n            <CodeLine tab=\"3\" value={'stateCopy.'+props.componentName[0].toLowerCase()+props.componentName.slice(1)+'List = action.'+props.componentName[0].toLowerCase()+props.componentName.slice(1)+'List'} />\n            <CodeLine tab=\"3\" value=\"return stateCopy\" />\n            <br/>\n            <CodeLine tab=\"2\" value=\"default:\" />\n            <CodeLine tab=\"3\" value=\"return state\" />\n            <CodeLine tab=\"1\" value=\"}\" />\n            <CodeLine tab=\"0\" value=\"}\" />\n            <br />\n            {props.isCRUD ?\n            <>\n            <CodeLine tab=\"0\" value={'export const set' + props.componentName + 'List = ('+props.componentName[0].toLowerCase()+props.componentName.slice(1)+'List) => ({ type: SET_'+props.componentName.toUpperCase()+'_LIST, '+props.componentName[0].toLowerCase()+props.componentName.slice(1)+'List })'} />\n            <CodeLine tab=\"0\" value=\"export const setTest = (toDoData) => ({ type: TEST_CONSTANT, testData })\" />\n            <CodeLine tab=\"0\" value=\"export const setTest = (toDoData) => ({ type: TEST_CONSTANT, testData })\" />\n            <CodeLine tab=\"0\" value=\"export const setTest = (toDoData) => ({ type: TEST_CONSTANT, testData })\" />\n            </>\n            :\n            <CodeLine tab=\"0\" value=\"export const setTest = (toDoData) => ({ type: TEST_CONSTANT, testData })\" />\n            }\n            <br />\n\n            {props.isCRUD ?\n                <>\n                    <CodeLine tab=\"0\" value=\"// get all items method: GET\" />\n                    <CodeLine tab=\"0\" value={'export const get' + props.componentName + 'List = () => {'} />\n                    <CodeLine tab=\"1\" value=\"return (dispatch) => {\" />\n                    <CodeLine tab=\"2\" value={'testAPI.getAll' + props.componentName + '.then(response => {'} />\n                    <CodeLine tab=\"3\" value={'dispatch(set' + props.componentName + 'List(response));'} />\n                    <CodeLine tab=\"2\" value=\"})\" />\n                    <CodeLine tab=\"1\" value=\"}\" />\n                    <CodeLine tab=\"0\" value=\"}\" />\n                    <br />\n                    <CodeLine tab=\"0\" value={'export const new' + props.componentName + ' = (data) => {'} />\n                    <CodeLine tab=\"0\" value=\"}\" />\n                    <br />\n                    <CodeLine tab=\"0\" value={'export const edit' + props.componentName + ' = (data) => {'} />\n                    <CodeLine tab=\"0\" value=\"}\" />\n                    <br />\n                    <CodeLine tab=\"0\" value={'export const delete' + props.componentName + ' = (data) => {'} />\n                    <CodeLine tab=\"0\" value=\"}\" />\n                    <br />\n                </>\n                :\n                <>\n                    <CodeLine tab=\"0\" value=\"export const getTest = (data) => {\" />\n                    <CodeLine tab=\"1\" value=\"return (dispatch) => {\" />\n                    <CodeLine tab=\"2\" value=\"testAPI.testEndpoint(data).then(response => {\" />\n                    <CodeLine tab=\"3\" value=\"dispatch(setTest(response));\" />\n                    <CodeLine tab=\"2\" value=\"})\" />\n                    <CodeLine tab=\"1\" value=\"}\" />\n                    <CodeLine tab=\"0\" value=\"}\" />\n                </>\n            }\n            <CodeLine tab=\"0\" value={'export default '+props.componentName[0].toLowerCase()+props.componentName.slice(1)+'Reducer'} />\n        </>\n    );\n}\n\n\nconst ReducerComponent = (props) => {\n    console.log('reducerComponentProps', props)\n    return (<FileContainer name=\"reducer.js\" collapsed={props.collapsed} body={<ReducerBody isCRUD={props.isCRUD} componentName={props.componentName} />} />)\n}\n\nexport default ReducerComponent;\n\n\n\n\n\n\n","import React from 'react';\nimport CodeLine from '../code/CodeLine';\nimport { Collapse, Button, message} from 'antd';\nimport FileContainer from './FileContainer';\n\nconst { Panel } = Collapse;\n\nconst ApiBody = () => {\n    return (\n        <div>\n            <CodeLine tab=\"0\" value=\"const baseURL = 'http://127.0.0.1:8000/api/'\" />\n            <br />\n            <CodeLine tab=\"0\" value=\"const PostOptions = {\" />\n            <CodeLine tab=\"1\" value=\"method: 'POST',\" />\n            <CodeLine tab=\"1\" value=\"headers: { 'Content-Type': 'application/json' },\" />\n            <CodeLine tab=\"1\" value=\"body: JSON.stringify(state)\" />\n            <CodeLine tab=\"0\" value=\"}\" />\n            <br />\n            <CodeLine tab=\"0\" value=\"const GetOptions = {\" />\n            <CodeLine tab=\"1\" value=\"method: 'GET',\" />\n            <CodeLine tab=\"1\" value=\"headers: { 'Content-Type': 'application/json' },\" />\n            <CodeLine tab=\"1\" value=\"body: JSON.stringify(state)\" />\n            <CodeLine tab=\"0\" value=\"}\" />\n            <br />\n            <CodeLine tab=\"0\" value=\"export const testAPI = {\" />\n            <CodeLine tab=\"1\" value=\"getTest = (data) => {\" />\n            \n            <CodeLine tab=\"2\" value=\"fetch(baseURL, PostOptions)\" />\n            <CodeLine tab=\"3\" value=\".then((response) => {\" />\n            <CodeLine tab=\"4\" value=\"//console.log(response.json());\" />\n            <CodeLine tab=\"4\" value=\"return response.json();\" />\n            <CodeLine tab=\"3\" value=\"})\" />\n            <CodeLine tab=\"3\" value=\".then((data) => {\" />\n            <CodeLine tab=\"4\" value=\"//console.log(data);\" />\n            <CodeLine tab=\"3\" value=\"})\" />\n            <CodeLine tab=\"2\" value=\"}\" />\n            <CodeLine tab=\"0\" value=\"}\" />\n            \n        </div>\n    )\n}\nconst ApiComponent = (props) => {\n    return <FileContainer name=\"api.js\" collapsed={props.collapsed} body={<ApiBody />}/>\n}\n\nexport default ApiComponent;\n\n","import React from 'react'\n\nconst Tab = (props) => {\n    let res = []\n    for (let index = 0; index < props.i; index++) {\n        res.push(<span key={props.i}>&#160;&#160;&#160;&#160;</span>)\n    }\n    return res\n}\n\nexport default Tab","import React from 'react'\nimport { message } from 'antd';\nimport Tab from './Tab';\nimport {CopyOutlined} from '@ant-design/icons';\n\nconst UrlCopyed = (props) => {\n    const copy = (value) => {\n        navigator.clipboard.writeText(value)\n        message.success(value + '- скопирован');\n    }\n\n    return (\n        <p>\n            { props.pre ? <span>{props.pre} <Tab i=\"1\" /></span> : null}\n            <b>{props.value}</b>\n            <Tab i=\"1\" />\n            <CopyOutlined\n                onClick={() => { copy(props.value) }}\n            />\n            {props.descriptions ?\n                <span> {props.descriptions}</span>\n                :\n                null\n            }\n        </p>\n    )\n}\n\nexport default UrlCopyed;","import React from 'react'\nimport { Form, Input, Button, Checkbox } from 'antd';\n\nconst layout = {\n    labelCol: { span: 8 },\n    wrapperCol: { span: 16 },\n};\nconst tailLayout = {\n    wrapperCol: { offset: 8, span: 16 },\n};\n\nconst ComponentNameForm = (props) => {\n\n    const onFinish = (values) => {\n        // switch\n        props.onFinish(values)\n    }\n\n    const onFinishFailed = (errorInfo) => {\n        console.log('Failed:', errorInfo);\n    };\n\n    return (\n        <Form\n            {...layout}\n            name=\"basic\"\n            initialValues={{ remember: true }}\n            onFinish={props.onFinish}\n            onFinishFailed={onFinishFailed}\n        >\n            <Form.Item\n                label=\"Название компонента\"\n                name=\"componentName\"\n                rules={[{ required: true, message: 'Введите название компонента!' }]}\n            >\n                <Input />\n            </Form.Item>\n\n            {/* <Form.Item\n                label=\"Password\"\n                name=\"password\"\n                rules={[{ required: true, message: 'Please input your password!' }]}\n            >\n                <Input.Password />\n            </Form.Item> */}\n\n            <Form.Item {...tailLayout} name=\"isApi\" valuePropName=\"checked\">\n                <Checkbox>Подключить <b>api.js</b></Checkbox>\n            </Form.Item>\n            <Form.Item {...tailLayout} name=\"isReducer\" valuePropName=\"checked\">\n                <Checkbox>Создать <b>testReducer.js</b></Checkbox>\n            </Form.Item>\n            <Form.Item {...tailLayout} name=\"isCRUD\" valuePropName=\"checked\">\n                <Checkbox>Добавить CRUD</Checkbox>\n            </Form.Item>\n\n            <Form.Item {...tailLayout}>\n                <Button type=\"primary\" htmlType=\"submit\">\n                    Submit\n                </Button>\n            </Form.Item>\n        </Form>\n    );\n}\n\nexport default ComponentNameForm;","import React from 'react'\n\nconst CreatingNewFiles = (props) => {\n\n    const getComandLine = () => {\n        let comandLine = 'CD src; MD redux; CD redux; echo $null >> store.js; code store.js; CD..;';\n        if (props.isApi) {\n            comandLine = comandLine+'MD api; CD api; echo $null >> api.js;; code api.js; CD..;'\n        }\n        if (props.isReducer) {\n            comandLine = comandLine+'CD redux; echo $null >> '+props.componentName+'Reducer.js; code '+props.componentName+'Reducer.js; CD..;'\n        }\n\n        comandLine = comandLine+'CD..'// CD.. \n        return comandLine\n    }\n    return (\n        <>\n            CreatingNewFiles to: {props.componentName}\n            <br/>\n            {getComandLine()}\n        </>\n    )\n}\n\nexport default CreatingNewFiles\n","import React, {useState} from 'react'\nimport { Collapse, message } from 'antd'\nimport  CodeLine  from './../code/CodeLine';\nimport StoreComponent from './../files/Store';\nimport ReducerComponent from './../files/Reducer';\nimport ApiComponent from './../files/ApiComponent';\nimport UrlCopyed from './../code/UrlCopyed'\nimport ComponentNameForm from './ComponentNameForm';\nimport CreatingNewFiles from './CreatingNewFiles';\n\nconst { Panel } = Collapse;\n\nconst ReactComponent = () => {\n    const [state, setState] = useState({\n        componentName: 'Test',\n        isApi: false,\n        isReducer: false,\n        isCRUD: false\n    })\n    const [isApi, setIsApi] = useState(false)\n    const [store, setStore] = useState(false)\n\n    const onFinish = (values) => {\n        console.log('Success:', values);\n        setStore(true)\n        setState(values)\n    }\n\n    return (\n        <>\n            <Collapse>\n                <Panel header=\"Подключение Redux\" key=\"6-1\">\n                    <UrlCopyed\n                        value=\"npm i react-redux redux redux-thunk -s\"\n                        descriptions=\" - Устанавливаем расширения\"\n                        pre=\"1)\"\n                    />\n                    <UrlCopyed\n                        value=\"npm i --save-dev @types/react-redux @types/redux @types/redux-thunk\"\n                        descriptions=\" - Получаем типы react-redux\"\n                        pre=\"2)\"\n                    />\n\n                    <ComponentNameForm onFinish={onFinish}/>\n                    <CreatingNewFiles {...state}/>\n                    \n                    {state.isApi ? <ApiComponent collapsed /> : null}\n                    {state.isReducer ? <ReducerComponent collapsed isCRUD={state.isCRUD} componentName={state.componentName}/> : null}\n                    {store ? <StoreComponent collapsed componentName={state.componentName} /> : null}\n\n                    <UrlCopyed\n                        value=\"import { Provider } from 'react-redux';\"\n                        descriptions=\" - Подключаем Provider компонент App.js\"\n                        pre=\"4)\"\n                    />\n                    <UrlCopyed\n                        value=\"<Provider store={store}>\"\n                        descriptions=\" - Оборачиваем все в Provider компонент App.js\"\n                        pre=\"5)\"\n                    />\n\n                    <UrlCopyed\n                        value=\"import store from './redux/store';\"\n                        descriptions=\" - Подключаем store\"\n                        pre=\"6)\"\n                    />\n                    <UrlCopyed\n                        value=\"CD src; MD redux; CD redux; echo $null >> store.tsx; code store.tsx; CD..; CD.. \"\n                        descriptions=\" - Создаем файл store.tsx\"\n                        pre=\"6)\"\n                    />\n                    {/* <UrlCopyed \n                                value=\"CD src/redux\" \n                                descriptions=\" - переходим в папку redux\"\n                                pre=\"6)\"\n                            />\n                            <UrlCopyed \n                                value=\"echo $null >> store.tsx\" \n                                descriptions=\" - Создаем файл\"\n                                pre=\"7)\"\n                            /> */}\n\n                    {/* <StoreComponent collapsed />\n                    <ReducerComponent collapsed />\n                    <ApiComponent collapsed /> */}\n\n                </Panel>\n                <Panel header=\"Create React App\" key=\"6-2\">\n                    <UrlCopyed\n                        value=\"npx create-react-app my-app\"\n                        descriptions=\" - Создать приложение\"\n                        pre=\"1)\"\n                    />\n                </Panel>\n                <Panel header=\"Router\" key=\"6-3\">\n                    <UrlCopyed\n                        value=\"npx create-react-app my-app\"\n                        descriptions=\" - Создать приложение\"\n                        pre=\"1)\"\n                    />\n                </Panel>\n                <Panel header=\"Deploy TS в Laravel\" key=\"6-4\">\n\n                </Panel>\n            </Collapse>\n\n        </>\n    );\n}\n\nexport default ReactComponent;","import React from 'react'\nimport { Collapse, message } from 'antd';\nimport UrlCopyed from '../code/UrlCopyed';\nimport Tab from '../code/Tab';\n\nconst { Panel } = Collapse;\n\nconst Laravel = (props) => {\n\n    return (\n        <>\n            <UrlCopyed value=\"php artisan make:controller PhotoController --resource\" descriptions=\"Создание ресурсного контроллера\" />\n            <Collapse defaultActiveKey={[]} >\n                <Panel header=\"Создание модели с контроллером и миграцией\" key=\"4-1\">\n                    <UrlCopyed value=\"php artisan make:model Todo -mcr\" descriptions=\"Создание ресурсного контроллера с привязкой к модели и миграцией\" />\n                    <span>Создается контроллер, модель, миграция</span>\n                    <h5>1. Заполнение модели:</h5>\n                    <UrlCopyed\n                        value=\"protected $table = 'NameInDB';\"\n                        descriptions=\" - Указать название таблици в базе данных\"\n                        pre=\"1.1)\"\n                    />\n                    <UrlCopyed\n                        value=\"protected $fillable = ['name', 'user_id', 'date',];\"\n                        descriptions=\" - Определить, для каких атрибутов разрешить массовое назначение\"\n                        pre=\"1.2)\"\n                    />\n                    <UrlCopyed\n                        value=\"protected $primaryKey = 'flight_id';\"\n                        descriptions=\" - Первичные ключи, если id то можно пропустить\"\n                        pre=\"1.3)\"\n                    />\n                    <UrlCopyed\n                        value=\"protected $attributes = ['delayed' => false,];\"\n                        descriptions=\" - Значения по умолчанию\"\n                        pre=\"1.4) \"\n                    />\n                    <UrlCopyed\n                        value=\"use Illuminate\\Database\\Eloquent\\SoftDeletes;\"\n                        descriptions=\" - Подключаем для мягкого удаления\"\n                        pre=\"1.5.1) \"\n                    />\n                    <UrlCopyed\n                        value=\"use SoftDeletes;\"\n                        descriptions=\" - Прописываем в теле класса\"\n                        pre=\"1.5.2) \"\n                    />\n\n                    <h5>2. Заполнение Контроллера:</h5>\n                    <UrlCopyed\n                        value='use App\\Task;'\n                        descriptions=\" - Подключить модель в контроллер\"\n                        pre=\"2.1) \"\n                    />\n                    <UrlCopyed\n                        value='return response()->json([\n                                        \"Tasks\"=> Task::all()\n                                        ], 200);'\n                        descriptions=\"}\"\n                        pre=\"2.2) public function index() {\"\n                    />\n                    <UrlCopyed\n                        value='$newTask = new Task;\n                                        $newTask->name = \"test_to \".$request->get(\"user_id\");\n                                        $newTask->user_id = $request->get(\"user_id\");\n                                        $newTask->date = now();\n                                        $newTask->save();'\n                        descriptions=\"}\"\n                        pre=\"2.3) public function store(Request $request) {\"\n                    />\n\n                    <p>2.4 В методе show() заменить $article на модель и вернуть его</p>\n                    <p>2.5) update():</p>\n                    <pre>\n                        <code>\n                            public function update(Request $request, Task $task)<br />\n                                        &#123; <br />\n                            <Tab i=\"1\" />$fields = $request-&#62;all();<br />\n                            <Tab i=\"1\" />foreach ($fields as $field =&#62; $value) &#123;<br />\n                            <Tab i=\"2\" />if (isset($task[$field])) &#123; <br />\n                            <Tab i=\"3\" />$task[$field] = $value;<br />\n                            <Tab i=\"2\" />&#125; else &#123;<br />\n                            <Tab i=\"3\" />$message[$field] = 'do not exist';<br />\n                            <Tab i=\"2\" />&#125;<br />\n                            <Tab i=\"1\" />&#125;<br />\n                            <Tab i=\"1\" />$task-&#62;save();<br />\n                            <Tab i=\"1\" />if (!isset($message)) &#123;<br />\n                            <Tab i=\"2\" />return response()-&#62;json([<br />\n                            <Tab i=\"3\" />$task,<br />\n                            <Tab i=\"2\" />], 200);<br />\n                            <Tab i=\"1\" />&#125; else &#123;<br />\n                            <Tab i=\"2\" />return response()-&#62;json(['error'=&#62;true, 'message'=&#62;$message], 401);<br />\n                            <Tab i=\"1\" />&#125;<br />\n                                        &#125;\n                                    </code>\n                    </pre>\n\n                                // Авторизация\n\n                                <h5>3. Настройка миграции:</h5>\n                    <li>php artisan make:migration create_users_table</li>\n                    <li>3.1 Прописать филды</li>\n                    <Collapse>\n                        <Panel header=\"Типы полей:\" key=\"4-1-1\">\n                            <UrlCopyed\n                                value=\"$table->softDeletes();\"\n                                descriptions=\" - Мягкое удаление\"\n                                pre=\"1)\"\n                            />\n                            <UrlCopyed\n                                value=\"$table->bigInteger('votes');\"\n                                descriptions=\" - Поле BIGINT\"\n                                pre=\"2)\"\n                            />\n                            <UrlCopyed\n                                value=\"$table->binary('data');\"\n                                descriptions=\" - Поле BLOB\"\n                                pre=\"3)\"\n                            />\n                            <UrlCopyed\n                                value=\"$table->boolean('confirmed');\"\n                                descriptions=\" - Поле BOOLEAN\"\n                                pre=\"4)\"\n                            />\n                            <UrlCopyed\n                                value=\"$table->char('name', 4);\"\n                                descriptions=\" - Поле CHAR с указанной длиной\"\n                                pre=\"5)\"\n                            />\n                            <UrlCopyed\n                                value=\"$table->date('created_at');\"\n                                descriptions=\" - Поле DATE\"\n                                pre=\"6)\"\n                            />\n                            <UrlCopyed\n                                value=\"$table->dateTime('created_at');\"\n                                descriptions=\" - Поле DATETIME\"\n                                pre=\"7)\"\n                            />\n                            <UrlCopyed\n                                value=\"$table->decimal('amount', 5, 2);\"\n                                descriptions=\" - Поле DECIMAL с указанной размерностью и точностью\"\n                                pre=\"8)\"\n                            />\n                            <UrlCopyed\n                                value=\"$table->double('column', 15, 8);\"\n                                descriptions=\" - Поле DOUBLE с указанной точностью\"\n                                pre=\"9)\"\n                            />\n                            <UrlCopyed\n                                value=\"$table->enum('choices', array('foo', 'bar'));\"\n                                descriptions=\" - Поле ENUM\"\n                                pre=\"10)\"\n                            />\n                            <UrlCopyed\n                                value=\"$table->float('amount');\"\n                                descriptions=\" - Поле FLOAT\"\n                                pre=\"11)\"\n                            />\n                            <UrlCopyed\n                                value=\"$table->increments('id');\"\n                                descriptions=\" - Первичный последовательный ключ (autoincrement)\"\n                                pre=\"12)\"\n                            />\n                            <UrlCopyed\n                                value=\"$table->integer('votes');\"\n                                descriptions=\" - Поле INTEGER\"\n                                pre=\"13)\"\n                            />\n                            <UrlCopyed\n                                value=\"$table->longText('description');\"\n                                descriptions=\" - Поле LONGTEXT\"\n                                pre=\"14)\"\n                            />\n                            <UrlCopyed\n                                value=\"$table->mediumText('description');\"\n                                descriptions=\" - Поле MEDIUMTEXT\"\n                                pre=\"15)\"\n                            />\n                            <UrlCopyed\n                                value=\"$table->morphs('taggable');\"\n                                descriptions=\" - Добавляет INTEGER поле taggable_id и STRING поле taggable_type\"\n                                pre=\"16)\"\n                            />\n                            <UrlCopyed\n                                value=\"$table->smallInteger('votes');\"\n                                descriptions=\" - Поле SMALLINT\"\n                                pre=\"17)\"\n                            />\n                            <UrlCopyed\n                                value=\"$table->string('email');\"\n                                descriptions=\" - Поле VARCHAR\"\n                                pre=\"18)\"\n                            />\n                            <UrlCopyed\n                                value=\"$table->string('name', 100);\"\n                                descriptions=\" - Поле VARCHAR с указанной длиной\"\n                                pre=\"19)\"\n                            />\n                            <UrlCopyed\n                                value=\"$table->text('description');\"\n                                descriptions=\" - Поле TEXT\"\n                                pre=\"20)\"\n                            />\n                            <UrlCopyed\n                                value=\"$table->time('sunrise');\"\n                                descriptions=\" - Поле TIME\"\n                                pre=\"21)\"\n                            />\n                            <UrlCopyed\n                                value=\"$table->timestamp('added_on');\"\n                                descriptions=\" - Поле TIMESTAMP\"\n                                pre=\"22)\"\n                            />\n                            <UrlCopyed\n                                value=\"$table->timestamps();\"\n                                descriptions=\" - Добавляет поля created_at и updated_at\"\n                                pre=\"23)\"\n                            />\n                            <UrlCopyed\n                                value=\"$table->tinyInteger('numbers');\"\n                                descriptions=\" - Поле TINYINT\"\n                                pre=\"24)\"\n                            />\n                            <UrlCopyed\n                                value=\"$table->rememberToken();\"\n                                descriptions=\" - Добавляет поле remember_token с типом VARCHAR(100) NULL\"\n                                pre=\"25)\"\n                            />\n                            <UrlCopyed\n                                value=\"$table->nullableTimestamps();\"\n                                descriptions=\" - То же, что и timestamps(), но разрешены значения NULL\"\n                                pre=\"26)\"\n                            />\n                        </Panel>\n                        <Panel header=\"Свойства полей:\" key=\"4-1-2\">\n                            <UrlCopyed\n                                value=\"->nullable()\"\n                                descriptions=\" - Указывает, что поле может быть NULL\"\n                                pre=\"1)\"\n                            />\n                            <UrlCopyed\n                                value=\"->default($value)\"\n                                descriptions=\" - Указывает значение по умолчанию для поля\"\n                                pre=\"2)\"\n                            />\n                            <UrlCopyed\n                                value=\"->unsigned()\"\n                                descriptions=\" - Обозначает беззнаковое число (UNSIGNED)\"\n                                pre=\"3)\"\n                            />\n                        </Panel>\n                    </Collapse>\n\n                    <h5>4. Создание сидера:</h5>\n                </Panel>\n                <Panel header=\"Изменение модели\" key=\"4-2\">\n                    Изменение модели\n                        </Panel>\n                <Panel header=\"ZMQ\" key=\"4-3\">\n                    <UrlCopyed value=\"composer require react/zmq\" descriptions=\"Установка ZMQ на Composer\" />\n                </Panel>\n                <Panel header=\"Web Soket\" key=\"4-4\"></Panel>\n                <Panel header=\"Events\" key=\"4-5\"></Panel>\n                <Panel header=\"Auth\" key=\"4-6\"></Panel>\n            </Collapse>\n        </>\n    )\n}\n\nexport default Laravel","import React from 'react'\nimport { Collapse, message } from 'antd';\nimport UrlCopyed from '../code/UrlCopyed';\nimport Tab from '../code/Tab';\nimport CodeLine from '../code/CodeLine';\n\nconst { Panel } = Collapse;\n\nconst CodeToPackege = () => {\n    return (\n        <>\n            <CodeLine tab=\"0\" value='\"scripts\": {' />\n            <CodeLine tab=\"1\" value='//...' />\n            <CodeLine tab=\"1\" value='\"predeploy\": \"npm run build\",' />\n            <CodeLine tab=\"1\" value='\"deploy\": \"gh-pages -d build\",' />\n            <CodeLine tab=\"0\" value='},' />\n        </>\n    )\n}\n\nconst Git = (props) => {\n    return (\n        <>\n            <Collapse defaultActiveKey={[]} >\n                <Panel header=\"Загрузка на VDS\" key=\"2-1\">\n                    <UrlCopyed\n                        value=\"git stash\"\n                        descriptions=\" - Схранение изменений в локальном хранилеще с возможностью дальнейшей работы\"\n                        pre=\"1)\"\n                    />\n                    <UrlCopyed\n                        value=\"git pull\"\n                        descriptions=\" - - Схранение изменений в локальном хранилеще с возможностью дальнейшей работы\"\n                        pre=\"2)\"\n                    />\n                </Panel>\n                <Panel header=\"Клонирование с git\" key=\"2-2\">\n                    <UrlCopyed\n                        value=\"git clone  https://github.com/zharikovartem/OnlinerParserApiServis.git project_name\"\n                        descriptions=\" - Клонируем с репозитория\"\n                        pre=\"1)\"\n                    />\n                    <UrlCopyed\n                        value=\"cd project_name\"\n                        descriptions=\" - Переходим в корневую папку проекта\"\n                        pre=\"2)\"\n                    />\n                    <UrlCopyed\n                        value=\"composer install\"\n                        descriptions=\" - Устанавливаем composer\"\n                        pre=\"3)\"\n                    />\n                    <p><Tab i=\"1\" /> Переходим в VsCode</p>\n                    <UrlCopyed\n                        value=\"npm install\"\n                        descriptions=\" - Устанавливаем NPM\"\n                        pre=\"4)\"\n                    />\n                    <UrlCopyed\n                        value=\"copy .env.example .env\"\n                        descriptions=\" - Заменяем файл настроек\"\n                        pre=\"5)\"\n                    />\n                    <p> *)<Tab i=\"1\" /> Для локальной версии: <br />\n                        <Tab i=\"2\" /><code>DB_DATABASE=OnlinerParserApiServis</code><br />\n                        <Tab i=\"2\" /><code>DB_USERNAME=root</code><br />\n                        <Tab i=\"2\" /><code>DB_PASSWORD=</code>\n                    </p>\n                    <UrlCopyed\n                        value=\"php artisan config:clear\"\n                        descriptions=\" - Чистим конфиг\"\n                        pre=\"6)\"\n                    />\n                    <UrlCopyed\n                        value=\"php artisan config:cache\"\n                        descriptions=\" - Чистим кэш\"\n                        pre=\"7)\"\n                    />\n                    <UrlCopyed\n                        value=\"php artisan key:generate\"\n                        descriptions=\" - Генерируем ключ\"\n                        pre=\"8)\"\n                    />\n                    <UrlCopyed\n                        value=\"php artisan migrate\"\n                        descriptions=\" - Мегрируем БД\"\n                        pre=\"9)\"\n                    />\n\n                </Panel>\n                <Panel header=\"Git pages\" key=\"2-3\">\n                    <UrlCopyed\n                        value=\"npm install gh-pages --save-dev\"\n                        descriptions=\" - Устанавливаем пакет gh-pages\"\n                        pre=\"1)\"\n                    />\n                    <UrlCopyed\n                        value='\"homepage\": \"https://zharikovartem.github.io/epam-app/\",'\n                        descriptions=\" - Добавляем адрес сайта в package.json\"\n                        pre=\"2)\"\n                    />\n                    3) Добавляем скрипты в package.json:<br/>\n                    <CodeToPackege />\n                    \n                    <UrlCopyed\n                        value='git remote add origin git@github.com/zharikovartem/DevGuide'\n                        descriptions=\" - add it as remote\"\n                        pre=\"4)\"\n                    />\n                    5) branch: gh-pages\n                    <br/>\n                    6) npm run deploy (Команды в NPM SCRIPTS)\n                    <br/>\n                    7) commit\n                    \n                    \n                </Panel>\n                <Panel header=\"Git stash\" key=\"2-4\">\n                    <UrlCopyed\n                        value=\"git stash\"\n                        descriptions=\" - Команда git stash сохраняет неподтвержденные изменения (индексированные и неиндексированные) в отдельном хранилище\"\n                        pre=\"1)\"\n                    />\n                    <UrlCopyed\n                        value=\"git stash pop\"\n                        descriptions=\" - Применить ранее отложенные изменения\"\n                        pre=\"2)\"\n                    />\n                </Panel>\n                <Panel header=\"Измненить https на ssh\" key=\"2-5\">\n                    <UrlCopyed\n                        value=\"git remote -v\"\n                        descriptions=\" - Узнать как сейчас осуществлено подключение\"\n                        pre=\"1)\"\n                    /> \n                    <UrlCopyed\n                        value=\"git remote set-url origin git@gitlab.com:krios_group/befree_front.git\"\n                        descriptions=\" - Изменить ссылку для подключения\"\n                        pre=\"1)\"\n                    />\n                </Panel>\n            </Collapse>\n        </>\n\n    )\n}\n\nexport default Git","import { LoginOutlined } from '@ant-design/icons';\nimport { CredentialsType } from '../Redux/redmineReducer'\nimport { instance, url } from './API'\n\nexport const redmineAPI = {\n  checkCreds(data: CredentialsType) {\n\n  //     return instance.get('/projects.json')\n  //   .then(response => {\n  //     return response.status === 200 ? response : null;\n  //   })\n  //   .catch(err => {\n  //     if (err.response) {\n  //       return err.response;\n  //     } else if (err.request) {\n  //     } else {\n  //     }\n  //     return null;\n  //   })\n\n  //   return fetch(url + '/projects.json', {\n  //     method: 'GET',\n  //     // body: JSON.stringify(data),\n  //     headers: {\n  //       // Authorization: 'Bearer ' + localStorage.getItem('apikey'),\n  //       'Content-Type': 'application/json',\n  //       'Accept': \"application/json\"\n  //     }\n  //   })\n  //     .then((data) => {\n  //       return data.json()\n  //     })\n  //     .then((json) => {\n  //       console.log(json)\n  //       return json\n  //     })\n\n  const xhr = new XMLHttpRequest();\n\n  // xhr.withCredentials = true;\n  \n  xhr.open('GET', 'https://redmine.smartdesign.by', true, 'a.zharikov@krios.by', 'gfhjkm4501')\n  // xhr.open('GET', 'https://a.zharikov%40krios.by:gfhjkm4501@redmine.smartdesign.by/projects.json?')\n\n  // xhr.withCredentials = true;\n  // xhr.setRequestHeader(\"Authorization\", \"Basic \" + \"a.zharikov@smartdesign.by:gfhjkm4501\");\n\n  xhr.send();\n  // this.setState({ isLoading: true })\n\n  xhr.onreadystatechange = () => {\n    if (xhr.readyState !== 4) {\n      return false\n    }\n\n    if (xhr.status !== 200) {\n      console.log(xhr.status + ': ' + xhr.statusText)\n    } else {\n      console.log(JSON.parse(xhr.responseText)) \n      // this.setState({\n      //   data: JSON.parse(xhr.responseText),\n      //   isLoading: false,\n      // })\n    }\n  }\n\n  },\n\n  Login() {\n    // https://redmine.smartdesign.by/login\n\n    const xhr = new XMLHttpRequest();\n    xhr.open('GET', 'https://redmine.smartdesign.by/projects.json', true, 'a.zharikov@krios.by', 'gfhjkm4501')\n    xhr.send();\n\n    xhr.onreadystatechange = () => {\n      if (xhr.readyState !== 4) {\n        return false\n      }\n  \n      if (xhr.status !== 200) {\n        console.log(xhr.status + ': ' + xhr.statusText)\n      } else {\n        console.log(JSON.parse(xhr.responseText)) \n      }\n    }\n\n  }\n}","import { Dispatch } from 'redux'\nimport { redmineAPI } from '../api/redmineApi'\n// import { authAPI } from '../Api/authAPI'\nimport { BaseThunkType, InferActionsTypes } from './store'\n\nexport type CredentialsType = {\n    login: string | null\n    password: string | null\n}\n\nexport type InitialStateType ={\n    userLogin: string | null\n    userPassword: string | null\n}\n\nlet initialState:InitialStateType = {\n    userLogin: null,\n    userPassword: null,\n}\n\ntype ActionsType = InferActionsTypes<typeof actions>\n\nconst redmineReducer = (state = initialState, action: ActionsType): InitialStateType => {\n    switch (action.type) {\n        \n        case 'REDMINE/SET_CREDENIALS':\n            console.log(action.credentials)\n            return {\n                    ...state,\n                    userLogin: action.credentials.login,\n                    userPassword: action.credentials.password,\n            }\n\n        default:\n            return state;\n    }\n}\n\nexport const actions = {\n    setCredentials: (credentials: CredentialsType) => ({type: 'REDMINE/SET_CREDENIALS', credentials} as const),\n}\n\nexport const setCredentials = (credentials: CredentialsType): ThunkType => {\n    return async (dispatch, getState) => {\n        dispatch( actions.setCredentials(credentials) )\n    }\n}\n\nexport const checkCreds = (credentials: CredentialsType): ThunkType => {\n    return async (dispatch) => {\n        const response = await redmineAPI.Login();\n    }\n}\n\nexport default redmineReducer\n\ntype ActionsTypes = InferActionsTypes<typeof actions>\ntype ThunkType = BaseThunkType<ActionsTypes>\nexport type DispatchType = Dispatch<ActionsTypes>","import { Button, Checkbox, Form, Input } from 'antd'\nimport React from 'react'\nimport { setCredentials } from '../../../Redux/redmineReducer'\nimport { useDispatch } from 'react-redux'\nimport UrlCopyed from '../../code/UrlCopyed'\nimport { RedmineLoginFormPropsType } from './RedmineLoginFormContainer'\n\nconst RedmineLoginForm: React.FC<RedmineLoginFormPropsType> = (props) => {\n\n    const onFinish = (values: any) => {\n        console.log('Success:', values);\n        props.setCredentials(values)\n        props.checkCreds(values)\n    };\n\n    const onFinishFailed = (errorInfo: any) => {\n        console.log('Failed:', errorInfo);\n    };\n\n    return (\n        <>\n            <UrlCopyed\n                value=\"a.zharikov@smartdesign.by\"\n                descriptions=\" - login\"\n            />\n            <UrlCopyed\n                value=\"gfhjkm4501\"\n                descriptions=\" - password\"\n            />\n\n            <Form\n                name=\"basic\"\n                labelCol={{ span: 8 }}\n                wrapperCol={{ span: 16 }}\n                initialValues={{ remember: true }}\n                onFinish={onFinish}\n                onFinishFailed={onFinishFailed}\n                autoComplete=\"off\"\n            >\n                <Form.Item\n                    label=\"Login\"\n                    name=\"login\"\n                    rules={[{ required: true, message: 'Please input your username!' }]}\n                >\n                    <Input />\n                </Form.Item>\n\n                <Form.Item\n                    label=\"Password\"\n                    name=\"password\"\n                    rules={[{ required: true, message: 'Please input your password!' }]}\n                >\n                    <Input.Password />\n                </Form.Item>\n\n                <Form.Item name=\"remember\" valuePropName=\"checked\" wrapperCol={{ offset: 8, span: 16 }}>\n                    <Checkbox>Remember me</Checkbox>\n                </Form.Item>\n\n                <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        Submit\n                    </Button>\n                </Form.Item>\n            </Form>\n\n        </>\n    )\n}\n\nexport default RedmineLoginForm","import {connect} from 'react-redux'\nimport { AppStateType } from '../../../Redux/store'\nimport { CredentialsType, checkCreds,  setCredentials } from '../../../Redux/redmineReducer'\nimport RedmineLoginForm from './RedmineLoginForm'\n\ntype MapPropsType = ReturnType<typeof mapStateToProps>\n\ntype MapDispatchPropsType = {\n    setCredentials: (credentials: CredentialsType) => void\n    checkCreds: (credentials: CredentialsType) => void\n}\n\ntype OwnRedmineLoginFormPropsType = {\n    \n}\n\nexport type RedmineLoginFormPropsType = MapPropsType & MapDispatchPropsType & OwnRedmineLoginFormPropsType\n\nlet mapStateToProps = (state: AppStateType) => {\n    return {\n        \n    }\n}\n\nexport default connect<MapPropsType, MapDispatchPropsType, OwnRedmineLoginFormPropsType, AppStateType>(mapStateToProps,\n    { setCredentials, checkCreds }\n)\n    (RedmineLoginForm)  ","import { Modal } from 'antd'\nimport React, { useEffect, useState } from 'react'\nimport RedmineLoginForm from './RedmineLoginFormContainer'\n\nconst RedmineLogin:React.FC<RedmineLoginPropsType> = (props) => {\n\n    const [isModalVisible, setIsModalVisible] = useState<boolean>(props.isOpen)\n\n    useEffect(() => {\n        setIsModalVisible(props.isOpen)\n    }, [props.isOpen]);\n\n    const handleSubmit = (values: any, actions: any) => {\n        console.log(values)\n        console.log(actions)\n    }\n\n    const handleOk = () => {\n        console.log('props.handleOk')\n        props.handleOk()\n    }\n\n    return (\n        <Modal\n            title=\"Add New Schedul\" \n            visible={isModalVisible} \n            onOk={handleOk} \n            onCancel={props.handleCancel}\n        >\n            <RedmineLoginForm />\n        </Modal>\n    )\n}\n\nexport default  RedmineLogin\n\ntype RedmineLoginPropsType = {\n    handleOk: ()=>void\n    handleCancel: ()=>void\n    isOpen: boolean\n}","import { Button } from 'antd'\nimport React, { useState } from 'react'\nimport RedmineLogin from './RedmineLogin/RedmineLogin'\n\nconst Redmine:React.FC<RedminePropsType> = (props) => {\n\n    const [isRedmineModalOpen, setIsRedmineModalOpen] = useState<boolean>(false)\n\n    const handleCancel = () => {\n        setIsRedmineModalOpen(false)\n    }\n\n    const handleOk = () => {\n        setIsRedmineModalOpen(false)\n    }\n\n    return (\n        <>\n            <Button type='primary' onClick={()=>{setIsRedmineModalOpen(true)}}>\n                Settings\n            </Button>\n\n            <RedmineLogin \n                handleCancel={handleCancel}\n                handleOk={handleOk}\n                isOpen={isRedmineModalOpen}\n            />\n        </>\n    )\n}\n\nexport default  Redmine\n\ntype RedminePropsType = {\n\n}","import React, { useState } from 'react';\nimport { Collapse, message } from 'antd';\nimport { CopyOutlined} from '@ant-design/icons';\nimport  CodeLine  from './code/CodeLine';\nimport StoreComponent from './files/Store';\nimport ReducerComponent from './files/Reducer';\nimport ApiComponent from './files/ApiComponent';\nimport ReactComponent from './reactComponent/ReactComponent';\nimport Laravel from './Laravel/Laravel';\nimport Git from './Git/Git';\nimport Redmine from './Redmine/Redmine';\n\nconst { Panel } = Collapse;\n\nconst Tab = (props) => {\n    let res = [];\n    for (let index = 0; index < props.i; index++) {\n        res.push(<span key={props.i}>&#160;&#160;&#160;&#160;</span>)\n    }\n    return res;\n}\n\nconst UrlCopyed = (props) => {\n    // const [copyed, setCopyed] = useState(null);\n    const copy = (value) => {\n        navigator.clipboard.writeText(value)\n        message.success(value + '- скопирован');\n    }\n\n    return (\n        <p>\n            { props.pre ? <span>{props.pre} <Tab i=\"1\" /></span> : null}\n            <b>{props.value}</b>\n            <Tab i=\"1\" />\n            <CopyOutlined\n                onClick={() => { copy(props.value) }}\n            />\n            {props.descriptions ?\n                <span> {props.descriptions}</span>\n                :\n                null\n            }\n        </p>\n    )\n}\n\nconst Main = () => {\n    const copy = (value) => {\n        // console.log(e.target.parentNode)\n        navigator.clipboard.writeText(value)\n        message.success(value + '- скопирован');\n    }\n    return (\n        <div>\n            <h3>добавить git user:</h3>\n            <p>\n                <b>git config user.name \"zharikovartem\"</b><br/>\n                <b>git config user.email \"7383125@mail.ru\"</b><br/>\n            </p>\n            <h3>Данные для SSH:</h3>\n            <p>\n                <b>ssh root@81.90.181.175</b> : 74NWWkFFhrGM\n                <br />\n                <b>ssh testadmin@81.90.181.175</b> : gfhjkm4501\n                <br />\n                <b>cd ../../var/www/www-root/data/www/crmapiserver.h1n.ru</b> - Перейти в директорию проекта\n                <br />\n                <b>ls</b> - Показать содержимое каталога (список названий файлов)\n            </p>\n\n            <h3>Данные для VDS:</h3>\n            <a href=\"https://artcrmvds.h1n.ru/\">Сайт продакшен</a> - админка\n            <br />\n            <a href=\"https://81.90.181.175:1500\">https://81.90.181.175:1500</a> - админка\n            <br />\n            <a href=\"http://81.90.181.175/phpmyadmin/index.php\">http://81.90.181.175/phpmyadmin/index.php</a>\n            - База данных\n            <br />\n            <a href=\"https://81.90.181.175:1500/ispmgr#/list/file/4?path=%2Fvar%2Fwww%2Fwww-root%2Fdata%2Fwww%2Fcrmapiserver.h1n.ru&p_num=1\">Менеджер файлов</a>\n\n            <h3>Обраить внимание</h3>\n            https://ant.design/components/steps/\n            <br />\n            php artisan make:controller Api/Auth/AuthController\n\n            <Collapse defaultActiveKey={[]} >\n                <Panel header=\"Endpoints\" key=\"1\">\n                    <UrlCopyed value=\"http://127.0.0.1:8000/api/getCatalogParts\" descriptions=\"получить спаршенное дерево категорий\" />\n                    <UrlCopyed value=\"http://127.0.0.1:8000/api/startCatalogParsing\" descriptions=\"получить список категорий\" />\n                    <UrlCopyed value=\"http://127.0.0.1:8000/api/startCatalogItem/hoods\" descriptions=\"получить список товаров выбранной категории\" />\n                    <UrlCopyed value=\"http://127.0.0.1:8000/api/startProductParamParsing/hoods\" descriptions=\"Начать парсинг описаний выбранной категории \" />\n                    <UrlCopyed value=\"http://127.0.0.1:8000/api/startProductParamParsing/hoods/1\" descriptions=\"Парсинг описаний выбранного по id товара\" />\n                    <UrlCopyed value=\"http://127.0.0.1:8000/api/getProductDescriptions/hoods\" descriptions=\"Получить готовые описания для выбранной группы товаров\" />\n                </Panel>\n                <Panel header=\"Git\" key=\"2\">\n                    < Git />\n                </Panel>\n                <Panel header=\"Artisan\" key=\"3\">\n                    <p>\n                        <b>php artisan migrate:fresh</b>\n                        <CopyOutlined\n                            onClick={() => { copy('php artisan migrate:fresh') }}\n                        />\n                    </p>\n                    <p>\n                        <b>php artisan queue:work</b>\n                        <CopyOutlined\n                            onClick={() => { copy('php artisan queue:work') }}\n                        />\n                    </p>\n                    <p>\n                        <b>php artisan queue:work --tries=10</b>\n                        <CopyOutlined\n                            onClick={() => { copy('php artisan queue:work --tries=10') }}\n                        />\n                    </p>\n                    <p>\n                        <b>php artisan queue:restart</b>\n                        <CopyOutlined\n                            onClick={() => { copy('php artisan queue:restart') }}\n                        />\n                    </p>\n                    <UrlCopyed value=\"php artisan queue:work --sleep=5\" descriptions=\"Ждем 5 секунд ???\" />\n                    <p>Migrations:</p>\n                    <UrlCopyed value=\"php artisan make:migration create_users_table --create=users\" descriptions=\"Создание новой миграции\" />\n                    <UrlCopyed value=\"php artisan migrate\" descriptions=\"\" />\n                    <p>Controllers:</p>\n                    <UrlCopyed value=\"php artisan make:controller Api/Auth/AuthController\" descriptions=\"Создание нового контроллера\" />\n                    <p>Models:</p>\n\n                    <UrlCopyed\n                        value=\"php artisan make:model User --migration\"\n                        descriptions=\"Создать миграцию БД при создании модели\"\n                    />\n                    <p>Siders:</p>\n                </Panel>\n                \n                <Panel header=\"Laravel\" key=\"4\">\n                    <Laravel />\n                </Panel>\n                <Panel header=\"Данные для SSH и VDS\" key=\"5\"></Panel>\n                <Panel header=\"React\" key=\"6\">\n                    <ReactComponent />\n                </Panel>\n            </Collapse>\n\n\n            jwt-auth secret [INk0XG6ac7zgH2zp1w7Q5EDYqOvKuYVYFmzyhE3TjQr3IowHyDj4uMLop1a11qNb] set successfully.\n        </div>\n    );\n};\n\nexport default Main;","import Main from './components/main';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { Col, Input, Row, InputNumber, Select, Space, Button, TreeSelect } from 'antd'\nimport { Field } from 'formik'\nimport React from 'react'\n\nconst { TreeNode } = TreeSelect\n\nconst FormRow: React.FC<FormRowPropsType> = (props) => {\n\n    const getComponent = () => {\n        switch (props.type) {\n            case 'input':\n                return Input\n\n            case 'inputNumber':\n                return InputNumber\n        \n            case 'select':\n                return Select\n\n            case 'treeSelect':\n                return TreeSelect\n\n            default:\n                break;\n        }\n    }\n\n    const getContent = () => {\n        switch (props.type) {\n            case 'treeSelect':\n                return (\n                    <TreeNode value='123' title='example'>\n                        {/* {generateTreeNodes(data, item.id)} */}\n                    </TreeNode>\n                )\n\n            default:\n                break;\n        }\n    }\n\n    return (\n        <Row>\n            <Col xs={24} span={12}>\n                {props.label}:\n            </Col>\n            <Col xs={props.isButton ? 18 : 24} span={12}>\n            <Space direction=\"vertical\" style={{ width: '100%' }}>\n                <Field\n                    component={getComponent()}\n                    name={props.name}\n                    placeholder={props.placeholder ? props.placeholder : null}\n                    type=\"text\"\n                    label={props.label}\n                    hasFeedback\n                    styled={{ with: '100%' }}\n                    onChange={props.onChange}\n                >\n                    {getContent()}\n                </Field>\n                </Space>\n            </Col>\n            {props.isButton && \n                <Col xs={4}>\n                    <Button type='primary'>Add</Button>\n                </Col>\n            }\n        </Row>\n    )\n}\n\nexport default FormRow\n\ntype FormRowPropsType = {\n    label: string\n    name: string\n    placeholder?: string\n    type: 'input' | 'inputNumber' | 'select' | 'switch' | 'textarea' | 'treeSelect'\n    submitCount?: any\n    isButton?: boolean\n    selectOptions?: any[]\n    onChange?: (data: any)=>void\n}","import React from 'react'\nimport { Form, FormikProps } from 'formik'\nimport FormRow from '../../../utils/FormRow/FormRow'\nimport { SchedulingCRUDFormPropsType } from './SchedulingCRUDFormContainer'\n\nconst SchedulingCRUDForm: React.FC<FormikProps<SchedulingCRUDFormPropsType>> = (props) => {\n\n    console.log(props)\n    return (\n        <Form\n            className=\"form-container\"\n            onSubmit={props.handleSubmit}\n        >\n            <FormRow\n                label='Name'\n                name='name'\n                type='input'\n            />\n\n            <FormRow\n                label='Parent'\n                name='parentId'\n                type='treeSelect'\n                placeholder='Please, choise parent task'\n            />\n\n        </Form>\n    )\n}\n\nexport default SchedulingCRUDForm","import { Modal } from 'antd'\nimport { Formik } from 'formik'\nimport React, { useEffect, useState } from 'react'\n// import SchedulingCRUDForm from './SchedulingCRUDFormContainer'\nimport SchedulingCRUDForm from './SchedulingCRUDForm'\n\nconst SchedulingModal:React.FC<SchedulingModalPropsType> = (props) => {\n\n    const [isModalVisible, setIsModalVisible] = useState(false)\n    const [value, setValue] = useState(undefined);\n    const [data, setData] = useState<any>(null)\n\n    useEffect(() => {\n        setIsModalVisible(props.isOpen)\n    }, [props.isOpen])\n\n    const handleSubmit = () => {\n\n    }\n\n    return (\n        <Modal \n            title=\"Add New Schedul\" \n            visible={isModalVisible} \n            onOk={props.handleOk} \n            onCancel={props.handleCancel}\n        >\n            <Formik\n                initialValues={{\n                    // name: 'test'\n                }}\n                onSubmit={handleSubmit}\n                enableReinitialize={true}\n            >\n                {SchedulingCRUDForm}\n            </Formik>\n        </Modal>\n    )\n}\n\nexport default  SchedulingModal\n\ntype SchedulingModalPropsType = {\n    handleOk: () => void\n    handleCancel: () => void\n    isOpen: boolean\n}","import { ScheduleType } from \"./Scheduling\";\n\ntype SchedulingArrayType = ScheduleType[] | undefined\n\nexport const createSchedulingTree = (schedulingArray: SchedulingArrayType, targetIndex?: string| undefined): ScheduleType[] => {\n    // let targetIndex: number | undefined\n    // console.log(schedulingArray)\n    if (!schedulingArray) return []\n\n    let response: ScheduleType[] = []\n    let childs: ScheduleType[] = []\n    let parentArray: string[] = []\n\n    schedulingArray.forEach( (item: ScheduleType, index: number) => {\n        if (item.parentIndex === targetIndex) {\n            response.push({\n                ...item,\n                // index: item.index ? item.index : index.toString(),\n                pp: index.toString()\n            })\n        } else {\n            // console.log(item)\n            childs.push({\n                ...item,\n                // index: item.index ? item.index : index.toString(),\n                pp: index.toString()\n            })\n            \n            if (!parentArray.includes(item.parentIndex)) parentArray.push(item.parentIndex)\n            \n        }\n    })\n\n    parentArray.forEach( (item) => {\n        response.filter( (resItem, resIndex) => {\n            // return resItem.index === item)[0].childs = createSchedulingTree(childs, item)\n            // console.log('!!!',resItem.index, item)\n            if (resItem.id === item) {\n                response[resIndex].childs = createSchedulingTree(childs, item)\n                // console.log('!!!', resItem)\n            }\n        })\n    })\n\n    // console.log('response: ', response)\n    // console.log('parentArray: ', parentArray)\n    // console.log('childs: ', childs)\n\n    return response\n}\n\n// const getList = (index: number, schedulingArray: SchedulingArrayType): SchedulingArrayType[] => {\n    \n// }","import { DownCircleTwoTone, FileAddTwoTone, UpCircleTwoTone } from '@ant-design/icons';\nimport { Menu, MenuProps } from 'antd';\nimport React from 'react'\nimport { ScheduleType } from '../Scheduling';\nimport { createSchedulingTree } from '../SchedulingHelper';\n\nconst ActionsMenu: React.FC<ActionsMenuPropsType> = (props) => {\n\n    const onMenuClick = (e: any) => {\n        console.log('click', e);\n        console.log('key', e.key);\n\n        // let newData = createSchedulingTree(JSON.parse(localStorage.getItem('data')))\n        let newData = JSON.parse(localStorage.getItem('data'))\n        console.log('newData', [...newData]);\n\n        switch (e.key) {\n            case '1':\n                newData.forEach((item, index) => {\n                    console.log(index)\n                    if (item.index === props.item.index && parseInt(props.item.index) > 0) {\n                        newData[index].index = (index - 1).toString()\n                        newData[index - 1].index = index.toString()\n                    }\n                })\n\n                newData.sort(function (a, b) {\n                    if (a.index > b.index) {\n                        return 1;\n                    }\n                    if (a.index < b.index) {\n                        return -1;\n                    }\n                    return 0;\n                })\n\n                console.log('localStorage.setItem', newData)\n                localStorage.setItem('data', JSON.stringify(newData));\n                props.onUpdate()\n                break;\n\n            case '2':\n                console.log(parseInt(props.item.index)-1)\n                console.log(newData.length)\n                if (parseInt(props.item.index)+1 >= newData.length) {\n                    break\n                }\n                newData[parseInt(props.item.index)].index = (parseInt(props.item.index)+1).toString()\n                newData[parseInt(props.item.index)+1].index = (parseInt(props.item.index)).toString()\n                // newData.forEach((item, index) => {\n                    \n                //     if (item.index === props.item.index && parseInt(props.item.index) < newData.length) {\n                //         console.log('+++', item.index, props.item.index)\n                //         newData[index].index = (index + 1).toString()\n                //         newData[index + 1].index = index.toString()\n                //     }\n                // })\n\n                newData.sort(function (a, b) {\n                    if (a.index > b.index) {\n                        return 1;\n                    }\n                    if (a.index < b.index) {\n                        return -1;\n                    }\n                    return 0;\n                })\n\n                console.log('localStorage.setItem', newData)\n\n                localStorage.setItem('data', JSON.stringify(newData));\n                props.onUpdate()\n                break;\n\n            case '3':\n                alert('add subtask')\n                break;\n\n            default:\n                break;\n        }\n    }\n\n    return (\n        <Menu\n            onClick={onMenuClick}\n            items={[\n                {\n                    key: '1',\n                    // label: '1st item',\n                    icon: <UpCircleTwoTone />\n                },\n                {\n                    key: '2',\n                    // label: '2nd item',\n                    icon: <DownCircleTwoTone />\n                },\n                {\n                    key: '3',\n                    // label: '3rd item',\n                    icon: <FileAddTwoTone />\n                },\n            ]}\n        />\n    )\n}\n\nexport default ActionsMenu\n\ntype ActionsMenuPropsType = {\n    item: ScheduleType\n    onUpdate: () => void\n}","import { List } from 'antd'\nimport React from 'react'\nimport { ScheduleType } from '../Scheduling'\nimport SchedulingRowWraper from '../SchedulingRow/SchedulingRowWraper'\n\nconst SchedulingList: React.FC<SchedulingListPropsType> = (props) => {\n\n    return (\n        <List\n            size=\"small\"\n            bordered\n            dataSource={props.data}\n            renderItem={(item: ScheduleType, index: number) => <SchedulingRowWraper item={item} index={index} handleOk={props.handleOk} />}\n        />\n    )\n}\n\nexport default SchedulingList\n\ntype SchedulingListPropsType = {\n    data: ScheduleType[]\n    handleOk: () => void\n}","import { DeleteTwoTone, DownCircleTwoTone, RightCircleTwoTone } from '@ant-design/icons'\nimport { Button, Col, Collapse, Dropdown, List, Row } from 'antd'\nimport React, { useState } from 'react'\nimport { ScheduleType } from '../Scheduling'\nimport ActionsMenu from './ActionsMenu'\n\nimport useCollapse from 'react-collapsed'\nimport SchedulingList from '../SchedulingList/SchedulingList'\n\nconst { Panel } = Collapse\n\nconst SchedulingRow: React.FC<SchedulingRowPropsType> = (props) => {\n\n    const [show, setShow] = useState<boolean>(true)\n\n    const { getCollapseProps, getToggleProps, isExpanded } = useCollapse()\n\n    const handleDelete = (index: string) => {\n        console.log(index)\n        let data: ScheduleType[] = JSON.parse(localStorage.getItem('data')) ? JSON.parse(localStorage.getItem('data')) : []\n        console.log(data)\n        data.splice(parseInt(index), 1)\n        console.log('localStorage.setItem', data)\n        localStorage.setItem('data', JSON.stringify(data));\n        props.handleOk()\n    }\n\n    const onShow = () => {\n        setShow(!show)\n    }\n\n    return (\n        <>\n            <List.Item className='w-100'>\n                <Row className='w-100'>\n                    <Col span={2}>\n                        {props.item.childs ?\n                            <Row >\n                                <Col span={6}>\n                                    <span className='pt-2'>{parseInt(props.item.pp) + 1}.</span>\n                                </Col>\n                                <Col span={6}>\n                                    {props.item.childs &&\n                                        <Button\n                                            {...getToggleProps()}\n                                            shape=\"circle\"\n                                            // @ts-ignore\n                                            type='text'\n                                            className='p-0 mr-1'\n                                            style={{top: -8}}\n                                        >\n                                            {isExpanded ?   \n                                                <DownCircleTwoTone \n                                                    // style={{ fontSize: 14 }} \n                                                /> \n                                                : \n                                                <RightCircleTwoTone />\n                                            }\n                                        </Button>\n                                    }\n                                </Col>\n                            </Row>\n                            :\n                            <span className='pt-2'>{parseInt(props.item.pp) + 1}.</span>\n                        }\n                    </Col>\n                    <Col className='ml-2' span={16}>\n                        <span className='pt-2'>{props.item.name}</span>\n                    </Col>\n                    <Col span={4}>\n                        <Row >\n                            <Col span={6}>\n                                <Button onClick={() => { handleDelete(props.item.id) }} shape=\"circle\" icon={<DeleteTwoTone />} />\n                            </Col>\n                            <Col span={6}>\n                                <Dropdown.Button \n                                    overlay={\n                                        <ActionsMenu \n                                            onUpdate={() => {\n                                                console.log('onAction!!!')\n                                                props.handleOk() \n                                            }} \n                                            item={props.item} />\n                                    } >\n                                </Dropdown.Button>\n                            </Col>\n                        </Row>\n                    </Col>\n                </Row>\n\n            </List.Item>\n\n            {props.item.childs &&\n                <section\n                    // style={{ transition: \"all .2s\" }}\n                    // hidden={show}\n                    {...getCollapseProps()}\n                >\n                    {/* <ReactCSSTransitionGroup\n                        transitionName=\"toggle\"\n                        transitionEnterTimeout={300}\n                        transitionLeaveTimeout={300}\n                    > */}\n\n                    <SchedulingList\n                        data={props.item.childs}\n                        handleOk={props.handleOk}\n                    />\n\n                    {/* </ReactCSSTransitionGroup> */}\n\n                </section>\n            }\n\n            {/* <div>\n                <button {...getToggleProps()}>\n                    {isExpanded ? 'Collapse' : 'Expand'}\n                </button>\n                <section {...getCollapseProps()}>Collapsed content 🙈</section>\n            </div> */}\n\n        </>\n    )\n}\n\nexport default SchedulingRow\n\nexport type SchedulingRowPropsType = {\n    item: ScheduleType\n    index: number\n    handleOk: () => void\n}\n","import { SettingOutlined } from '@ant-design/icons';\nimport { Collapse } from 'antd'\nimport CollapsePanel from 'antd/lib/collapse/CollapsePanel'\nimport React from 'react'\nimport SchedulingRow, { SchedulingRowPropsType } from './SchedulingRow'\n\nconst genExtra = () => (\n    <SettingOutlined\n      onClick={event => {\n        // If you don't want click extra trigger collapse, you can prevent this:\n        event.stopPropagation();\n      }}\n    />\n)\n\nconst SchedulingRowWraper:React.FC<SchedulingRowPropsType> = (props) => {\n\n    // if (props.item.childs) return (\n    //     <Collapse \n    //         className='m-0 p-0' \n    //         defaultActiveKey={[]} \n    //         onChange={() => { }} \n    //         bordered={false}\n    //         accordion={true}\n    //     >\n    //         <CollapsePanel \n    //             className='m-0 p-0' \n    //             extra={genExtra()}\n    //             // showArrow={false}\n    //             header={\n    //                 <div className='m-0 p-0 w-100'>\n    //                     <SchedulingRow {...props}/>\n    //                 </div>\n    //             } \n    //             key=\"1\"\n    //             // collapsible=\"disabled\"\n    //         >\n    //             <p>?????????????</p>\n    //         </CollapsePanel>\n    //     </Collapse>\n    // )\n\n    return (\n        <SchedulingRow {...props}/>\n    )\n}\n\nexport default  SchedulingRowWraper","import { Button, Col, List, Pagination, Popconfirm, Row } from 'antd'\nimport React, { useState } from 'react'\nimport TestComp from '../../typescript/TestComp'\nimport SchedulingForm from './SchedulingForm/SchedulingForm'\nimport SchedulingModal from './SchedulingForm/SchedulingModal'\nimport { createSchedulingTree } from './SchedulingHelper'\nimport SchedulingRow from './SchedulingRow/SchedulingRow'\nimport SchedulingRowWraper from './SchedulingRow/SchedulingRowWraper'\n\nexport type ScheduleType = {\n    name: string\n    id: string\n    // index?: string\n    parentIndex?: string\n    childs?: ScheduleType[]\n    pp?: string\n}\n\nconst Scheduling: React.FC = (props: any) => {\n\n    const [isOpen, setIsOpen] = useState<boolean>(false)\n    // const [data, setData] = useState<ScheduleType[]>(JSON.parse(localStorage.getItem('data')) ? JSON.parse(localStorage.getItem('data')) : [])\n    const [data, setData] = useState<ScheduleType[]>(createSchedulingTree(JSON.parse(localStorage.getItem('data'))))\n\n    createSchedulingTree(JSON.parse(localStorage.getItem('data')))\n\n    const handleOpen = () => {\n\n    }\n\n    const handleOk = () => {\n\n        isOpen && setIsOpen(false)\n        const updatedData = createSchedulingTree(JSON.parse(localStorage.getItem('data')))\n\n        // createSchedulingTree(updatedData)\n\n        console.log(updatedData)\n        setData(updatedData)\n    }\n\n    return (\n        <>\n            <Row className='my-3'>\n                <Col span={12}><h3>Scheduling</h3></Col>\n                <Col span={12}>\n                    <Button className='mx-2' onClick={() => { setIsOpen(true) }} type='primary'>Add</Button>\n                    <Popconfirm\n                        title=\"Are you sure to delete all tasks?\"\n                        onConfirm={()=>{localStorage.removeItem('data')}}\n                        onCancel={()=>{}}\n                        okText=\"Yes\"\n                        cancelText=\"No\"\n                    >\n                        <Button \n                            // className='mx-1' \n                            // onClick={()=>{localStorage.removeItem('data')}} \n                            danger\n                        >\n                            Clear\n                        </Button>\n                    </Popconfirm>\n                </Col>\n            </Row>\n\n            <List\n                size=\"small\"\n                // header={\n\n                // }\n                // footer={<Pagination defaultCurrent={1} total={50} />}\n                bordered\n                dataSource={data}\n                renderItem={(item: ScheduleType, index: number) => <SchedulingRowWraper item={item} index={index} handleOk={handleOk} />}\n            />\n\n            <SchedulingModal\n                handleCancel={() => { setIsOpen(false) }}\n                handleOk={handleOk}\n                isOpen={isOpen}\n            />\n        </>\n    )\n}\n\nexport default Scheduling","import { Table } from 'antd'\nimport React, { useState } from 'react'\n\nconst DataList: React.FC<DataListPropsType> = (props) => {\n\n    const [data, setData] = useState<any>(JSON.parse(localStorage.getItem('data')))\n\n    console.log(props)\n\n    const columns = [\n        {\n            title: 'Name',\n            dataIndex: 'name',\n            key: 'name',\n            render: text => <a>{text}</a>,\n        },\n        // {\n        //     title: 'Id',\n        //     dataIndex: 'id',\n        //     key: 'id',\n        //     render: text => <a>{text}</a>,\n        // },\n        {\n            title: 'Parent',\n            dataIndex: 'parentIndex',\n            key: 'parent',\n            // render: text => <a>{text}</a>,\n            render: (text: any) => {\n                const target = data.filter(item => item.id === text)\n                return (\n                    <a>\n                        {target[0] ? target[0].name : ''}\n                    </a>\n                )\n            },\n        },\n        {\n            title: 'PP',\n            dataIndex: 'pp',\n            key: 'pp',\n            render: text => <a>{text}</a>,\n            \n        }\n    ]\n\n    return (\n        <>\n            <Table columns={columns} dataSource={props.data} />\n        </>\n    )\n}\n\nexport default DataList\n\ntype DataListPropsType = {\n    data: any[]\n}","import { Spin } from 'antd';\nimport React, { useEffect, useState } from 'react'\nimport DataList from './DataList/DataList';\n\nconst Data:React.FC<DataPropsType> = (props) => {\n\n    const [data, setData] = useState<any>(null)\n\n    useEffect(() => {\n        setData(JSON.parse(localStorage.getItem('data')))\n    }, []);\n\n    if(!data) return (\n        <Spin />\n    )\n\n    return (\n        <>\n            <DataList\n                data={data}\n            />\n        </>\n    )\n}\n\nexport default  Data\n\ntype DataPropsType = {\n\n}","import { Dispatch } from 'redux'\n// import { authAPI } from '../Api/authAPI'\nimport { BaseThunkType, InferActionsTypes } from './store'\n\nexport type InitialStateType ={\n    data: any[]\n}\n\nlet initialState:InitialStateType = {\n    data: []\n}\n\ntype ActionsType = InferActionsTypes<typeof actions>\n\nconst dataReducer = (state = initialState, action: ActionsType): InitialStateType => {\n    switch (action.type) {\n        case 'DATA/TEST':\n            return {\n                    ...state,\n                    data: action.data\n            }\n        default:\n            return state;\n    }\n}\n\nexport const actions = {\n    setData: (data: any[]) => ({type: 'DATA/TEST', data} as const),\n}\n\nexport const getData = (): ThunkType => {\n    return async (dispatch, getState) => {\n        const data = JSON.parse(localStorage.getItem('data'))\n        dispatch( actions.setData(data) )\n    }\n}\n\nexport const setData = (data: any[]): ThunkType => {\n    return async (dispatch, getState) => {\n        dispatch( actions.setData(data) )\n    }\n}\n\nexport default dataReducer\n\ntype ActionsTypes = InferActionsTypes<typeof actions>\ntype ThunkType = BaseThunkType<ActionsTypes>\nexport type DispatchType = Dispatch<ActionsTypes>","import {Action, applyMiddleware, combineReducers, createStore} from \"redux\"\nimport thunkMiddleware, {ThunkAction} from \"redux-thunk\"\nimport dataReducer from \"./dataReducer\"\nimport redmineReducer from \"./redmineReducer\"\n\nlet rootReducer = combineReducers({\n    dataReducer: dataReducer,\n    redmineReducer: redmineReducer\n})\n\ntype rootReducerType = typeof rootReducer\nexport type AppStateType = ReturnType<rootReducerType>\n\nexport type InferActionsTypes<T> = T extends { [keys: string]: (...args: any[]) => infer U } ? U : never\nexport type BaseThunkType<A extends Action = Action, R = Promise<void>> = ThunkAction<R, AppStateType, unknown, A>\n\nlet store = createStore(rootReducer, applyMiddleware(thunkMiddleware))\n\nexport default store","import { Col, InputNumber, List, Row } from 'antd'\nimport React from 'react'\nimport { ProjectType } from '../Selary'\n\ntype ProjectRowPropsType = {\n    project: ProjectType\n    index: number\n    onTimeChange: (project: ProjectType, index: number) => void\n}\n\nconst ProjectRow:React.FC<ProjectRowPropsType> = (props) => {\n\n    const onChange = (value: number) => {\n        props.onTimeChange({\n            ...props.project,\n            trackedTime: value\n        }, props.index)\n    }\n\n    return (\n        <List.Item>\n            <Row className='w-100'>\n                <Col className='w-100' span={12}>\n                    {props.project.name}\n                </Col>\n                <Col span={6}>\n                    <InputNumber onChange={onChange} className='w-100' />\n                </Col>\n                <Col span={6}>\n                    {/* Actions */}\n                </Col>\n            </Row>\n            \n        </List.Item>\n    )\n}\n\nexport default  ProjectRow\n\n","import { SaveOutlined } from '@ant-design/icons'\nimport { Button, Checkbox, Col, Divider, Form, Input, InputNumber, List, Row } from 'antd'\nimport React, { useEffect, useState } from 'react'\nimport ProjectRow from './ProjectRow/ProjectRow'\n\n\nexport type ProjectType = {\n    name: string\n    trackedTime?: number\n}\n\nconst Selary: React.FC<SelaryPropsType> = (props) => {\n\n    const [projects, setProjects] = useState<ProjectType[]>([])\n    const [totalTime, setTotalTime] = useState<number>(0)\n    const [monthTime, setMonthTime] = useState<number>(0)\n\n    useEffect(() => {\n        let total = 0\n        projects.forEach( item => total = total+item.trackedTime)\n        setTotalTime(total)\n    }, [projects]);\n\n    const onFinish = (values: any) => {\n        console.log('Success:', values);\n        const projectsCopy = [...projects]\n        projectsCopy.push({\n            name: values.projectName,\n            trackedTime: 0\n        })\n        setProjects(projectsCopy)\n    }\n\n    const onFinishFailed = (errorInfo: any) => {\n        console.log('Failed:', errorInfo);\n    }\n\n    const onTimeChange  = (project: ProjectType, index: number) => {\n        const projectsCopy = [...projects]\n        projectsCopy[index] = project\n        setProjects(projectsCopy)\n        // setTotalTime(project.trackedTime)\n    }\n\n    const onMonthTimeChange = (value: number) => {\n        setMonthTime(value)\n    }\n\n    return (\n        <>\n            <Form\n                name=\"basic\"\n                labelCol={{ span: 8 }}\n                wrapperCol={{ span: 16 }}\n\n                initialValues={{ remember: true }}\n                onFinish={onFinish}\n                onFinishFailed={onFinishFailed}\n                autoComplete=\"off\"\n            >\n                <Row>\n                    <Col span={18}>\n                        <Form.Item\n                            label=\"Имя Проекта\"\n                            name=\"projectName\"\n                        // rules={[{ required: true, message: 'Please input your username!' }]}\n                        >\n                            <Input />\n                        </Form.Item>\n                    </Col>\n                    <Col span={6}>\n                        <Form.Item\n                            wrapperCol={{ offset: 6, span: 6 }}\n                        >\n                            <Button type=\"primary\" htmlType=\"submit\">\n                                Add\n                            </Button>\n                        </Form.Item>\n                    </Col>\n                </Row>\n            </Form>\n\n            <Divider orientation=\"left\">\n                Список проектов:\n                <Button className='ml-3 mr-2' shape=\"round\" type='primary' size='small'icon={<SaveOutlined />} />    \n            </Divider>\n\n            {/* {projects.map( item => {\n                return (\n                    <div>{item.name}</div>\n                )\n            })} */}\n\n            <List\n                size=\"small\"\n                header={<div>Часов в месяце: \n                    <InputNumber size='small' className='ml-3' onChange={(value: number) => {onMonthTimeChange(value)}}  />\n                </div>}\n                footer={<div>ИТОГО: {totalTime} ч. , Разница: {(totalTime-monthTime).toFixed(2)} ч. , $: {((totalTime-monthTime)*12).toFixed(2)}</div>}\n                bordered\n                dataSource={projects}\n                renderItem={ \n                    (item, index) => {\n                        return <ProjectRow \n                            project={item} \n                            index={index}\n                            onTimeChange={onTimeChange}\n                        />\n                    }\n                }\n            />\n\n        </>\n    )\n}\n\nexport default Selary\n\ntype SelaryPropsType = {\n\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Scheduling from './components/Scheduling/Scheduling'\n\nimport 'antd/dist/antd.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { Tabs } from 'antd';\nimport Data from './components/Data/Data';\nimport Redmine from './components/Redmine/Redmine';\nimport store from './Redux/store';\n// import { Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport Selary from './components/Selary/Selary';\n\nconst { TabPane } = Tabs;\n\nReactDOM.render(\n    // <React.StrictMode>\n    // <Router>\n        <Provider store={store}>\n            <div className=\"container-fluid\">\n                <Tabs defaultActiveKey=\"1\">\n                    <TabPane tab=\"Scheduling\" key=\"1\">\n                        <Scheduling />\n                    </TabPane>\n                    <TabPane tab=\"Components\" key=\"2\">\n                        вывести список стилизованных компонентов\n                    </TabPane>\n                    <TabPane tab=\"Guide\" key=\"3\">\n                        <App />\n                    </TabPane>\n                    <TabPane tab=\"Data\" key=\"4\">\n                        <Data />\n                    </TabPane>\n                    <TabPane tab=\"Redmine\" key=\"5\">\n                        <Redmine />\n                    </TabPane>\n                    <TabPane tab=\"Selary\" key=\"6\">\n                        <Selary />\n                    </TabPane>\n                </Tabs>\n\n            </div>\n        </Provider>\n    // </Router>\n\n    // </React.StrictMode>\n    ,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}