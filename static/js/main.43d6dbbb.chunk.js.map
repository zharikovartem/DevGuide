{"version":3,"sources":["components/code/CodeLine.js","components/files/FileContainer.js","components/files/Store.js","components/files/Reducer.js","components/files/ApiComponent.js","components/code/Tab.js","components/code/UrlCopyed.js","components/reactComponent/ComponentNameForm.js","components/reactComponent/CreatingNewFiles.js","components/reactComponent/ReactComponent.js","components/Laravel/Laravel.js","components/Git/Git.js","components/main.js","App.js","reportWebVitals.js","index.js"],"names":["Tab","props","res","index","i","push","CodeLine","tab","value","Panel","Collapse","FileContainer","targ","useRef","collapsed","defaultActiveKey","header","name","className","size","onClick","navigator","clipboard","writeText","current","innerText","message","success","ref","body","StoreBody","console","log","id","componentName","toLowerCase","slice","StoreComponent","ReducerBody","isCRUD","toUpperCase","ReducerComponent","ApiBody","ApiComponent","UrlCopyed","pre","CopyOutlined","descriptions","layout","labelCol","span","wrapperCol","tailLayout","offset","ComponentNameForm","initialValues","remember","onFinish","onFinishFailed","errorInfo","Item","label","rules","required","valuePropName","type","htmlType","CreatingNewFiles","comandLine","isApi","isReducer","getComandLine","ReactComponent","useState","state","setState","store","setStore","values","Reducer","Store","Laravel","CodeToPackege","Git","ReadMe","copy","href","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","TabPane","Tabs","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.43d6dbbb.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Tab = (props) => {\r\n    let res = [];\r\n    for (let index = 0; index < props.i; index++) {\r\n        res.push(<span key={props.i}>&#160;&#160;&#160;&#160;</span>)\r\n    }\r\n    return res;\r\n}\r\n\r\n// <CodeLine tab=\"0\" />\r\nconst CodeLine = (props) => {\r\n    return (\r\n        <>\r\n            {props.tab ? <Tab i={props.tab}></Tab> : null}\r\n            <code>{props.value}</code>\r\n            <br/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CodeLine;","import React, { useRef } from 'react';\r\nimport CodeLine from '../code/CodeLine';\r\nimport { Collapse, Button, message } from 'antd';\r\n\r\nconst { Panel } = Collapse;\r\n\r\nconst blockHeader = (name, onCopy) => {\r\n    return (\r\n        <>\r\n            {name}\r\n            <div className=\"float-right\">\r\n                <Button size=\"small\" onClick={onCopy}>Copy</Button>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nconst FileContainer = (props) => {\r\n\r\n    const targ = useRef();\r\n\r\n    const onCopy = () => {\r\n        navigator.clipboard.writeText(targ.current.innerText)\r\n        message.success(props.name + ' скопирован!')\r\n    }\r\n\r\n    if (props.collapsed) {\r\n        return (\r\n            <Collapse defaultActiveKey={[]} >\r\n                <Panel\r\n                    // header={blockHeader(props.name, onCopy)} \r\n                    header={props.name}\r\n                >\r\n                    <div className=\"float-right\">\r\n                        <Button size=\"small\" onClick={onCopy}>Copy</Button>\r\n                    </div>\r\n                    <div\r\n                        className=\"test\"\r\n                        ref={targ}\r\n                    >\r\n                        {props.body}\r\n                    </div>\r\n\r\n                </Panel>\r\n            </Collapse>\r\n        )\r\n    } else {\r\n        return props.body\r\n    }\r\n}\r\n\r\nexport default FileContainer;\r\n","import React from 'react';\r\nimport CodeLine from '../code/CodeLine';\r\nimport { Collapse, Button, message} from 'antd';\r\nimport FileContainer from './FileContainer';\r\n\r\nconst { Panel } = Collapse;\r\n\r\nconst StoreBody = (props) => {\r\n    console.log(props)\r\n    return (\r\n        <div id=\"123\">\r\n            <CodeLine tab=\"0\" value=\"import { createStore, combineReducers, applyMiddleware } from 'redux';\" />\r\n            <CodeLine tab=\"0\" value={'import '+props.componentName[0].toLowerCase()+props.componentName.slice(1)+'Reducer from \"./'+props.componentName[0].toLowerCase()+props.componentName.slice(1)+'Reducer\"'} />\r\n            <CodeLine tab=\"0\" value=\"import thunkMiddleware from 'redux-thunk';\" />\r\n            {/* <CodeLine tab=\"0\" value=\"import permissionReducer from './permissionsReducer';\" />\r\n            <CodeLine tab=\"0\" value=\"import productReducer from './productReducer';\" />\r\n            <CodeLine tab=\"0\" value=\"import toDoReducer from './toDoReducer';\" /> */}\r\n            <br />\r\n            <CodeLine tab=\"0\" value=\"let redusers = combineReducers({\" />\r\n            <CodeLine tab=\"1\" value={props.componentName[0].toLowerCase()+props.componentName.slice(1)+': '+props.componentName[0].toLowerCase()+props.componentName.slice(1)+'Reducer,'} />\r\n            {/* <CodeLine tab=\"1\" value=\"permissions: permissionReducer,\" />\r\n            <CodeLine tab=\"1\" value=\"products: productReducer,\" />\r\n            <CodeLine tab=\"1\" value=\"toDo: toDoReducer,\" /> */}\r\n            <CodeLine tab=\"0\" value=\"});\" />\r\n            <br />\r\n            <CodeLine tab=\"0\" value=\"let store = createStore(redusers, applyMiddleware(thunkMiddleware));\" />\r\n            <br />\r\n            <CodeLine tab=\"0\" value=\"export default store;\" />\r\n        </div>\r\n    )\r\n}\r\nconst StoreComponent = (props) => {\r\n    return <FileContainer name=\"store.js\" collapsed={props.collapsed} body={<StoreBody componentName={props.componentName}/>}/>\r\n}\r\n\r\nexport default StoreComponent;\r\n\r\n","import React from 'react';\r\nimport CodeLine from '../code/CodeLine';\r\nimport FileContainer from './FileContainer';\r\n\r\n\r\nconst ReducerBody = (props) => {\r\n    console.log(props)\r\n    return (\r\n        <>\r\n            <CodeLine tab=\"0\" value=\"import {testAPI} from './../api/api'\" />\r\n            <br />\r\n            {props.isCRUD ?\r\n            <>\r\n            <CodeLine tab=\"0\" value={'const SET_'+props.componentName.toUpperCase()+'_LIST = \"SET_'+props.componentName.toUpperCase()+'_LIST\"'} />\r\n            {/* <CodeLine tab=\"0\" value=\"const TEST_CONSTANT = 'TEST_CONSTANT'\" />\r\n            <CodeLine tab=\"0\" value=\"const TEST_CONSTANT = 'TEST_CONSTANT'\" />\r\n            <CodeLine tab=\"0\" value=\"const TEST_CONSTANT = 'TEST_CONSTANT'\" /> */}\r\n            </>\r\n            :\r\n            <CodeLine tab=\"0\" value=\"const TEST_CONSTANT = 'TEST_CONSTANT'\" />\r\n            }\r\n            <br />\r\n            <CodeLine tab=\"0\" value=\"let initialState = {\" />\r\n            <CodeLine tab=\"1\" value={props.componentName[0].toLowerCase()+props.componentName.slice(1)+'List: null,'} />\r\n            <CodeLine tab=\"0\" value=\"}\" />\r\n            <br />\r\n            <CodeLine tab=\"0\" value={'const '+props.componentName[0].toLowerCase()+props.componentName.slice(1)+'Reducer = (state = initialState, action) => {'} />\r\n            <CodeLine tab=\"1\" value=\"let stateCopy= { ...state }\" />\r\n            <CodeLine tab=\"1\" value=\"switch (action.type) {\" />\r\n            <CodeLine tab=\"2\" value={'case SET_'+props.componentName.toUpperCase()+'_LIST:'} />\r\n            <CodeLine tab=\"3\" value={'stateCopy.'+props.componentName[0].toLowerCase()+props.componentName.slice(1)+'List = action.'+props.componentName[0].toLowerCase()+props.componentName.slice(1)+'List'} />\r\n            <CodeLine tab=\"3\" value=\"return stateCopy\" />\r\n            <br/>\r\n            <CodeLine tab=\"2\" value=\"default:\" />\r\n            <CodeLine tab=\"3\" value=\"return state\" />\r\n            <CodeLine tab=\"1\" value=\"}\" />\r\n            <CodeLine tab=\"0\" value=\"}\" />\r\n            <br />\r\n            {props.isCRUD ?\r\n            <>\r\n            <CodeLine tab=\"0\" value={'export const set' + props.componentName + 'List = ('+props.componentName[0].toLowerCase()+props.componentName.slice(1)+'List) => ({ type: SET_'+props.componentName.toUpperCase()+'_LIST, '+props.componentName[0].toLowerCase()+props.componentName.slice(1)+'List })'} />\r\n            <CodeLine tab=\"0\" value=\"export const setTest = (toDoData) => ({ type: TEST_CONSTANT, testData })\" />\r\n            <CodeLine tab=\"0\" value=\"export const setTest = (toDoData) => ({ type: TEST_CONSTANT, testData })\" />\r\n            <CodeLine tab=\"0\" value=\"export const setTest = (toDoData) => ({ type: TEST_CONSTANT, testData })\" />\r\n            </>\r\n            :\r\n            <CodeLine tab=\"0\" value=\"export const setTest = (toDoData) => ({ type: TEST_CONSTANT, testData })\" />\r\n            }\r\n            <br />\r\n\r\n            {props.isCRUD ?\r\n                <>\r\n                    <CodeLine tab=\"0\" value=\"// get all items method: GET\" />\r\n                    <CodeLine tab=\"0\" value={'export const get' + props.componentName + 'List = () => {'} />\r\n                    <CodeLine tab=\"1\" value=\"return (dispatch) => {\" />\r\n                    <CodeLine tab=\"2\" value={'testAPI.getAll' + props.componentName + '.then(response => {'} />\r\n                    <CodeLine tab=\"3\" value={'dispatch(set' + props.componentName + 'List(response));'} />\r\n                    <CodeLine tab=\"2\" value=\"})\" />\r\n                    <CodeLine tab=\"1\" value=\"}\" />\r\n                    <CodeLine tab=\"0\" value=\"}\" />\r\n                    <br />\r\n                    <CodeLine tab=\"0\" value={'export const new' + props.componentName + ' = (data) => {'} />\r\n                    <CodeLine tab=\"0\" value=\"}\" />\r\n                    <br />\r\n                    <CodeLine tab=\"0\" value={'export const edit' + props.componentName + ' = (data) => {'} />\r\n                    <CodeLine tab=\"0\" value=\"}\" />\r\n                    <br />\r\n                    <CodeLine tab=\"0\" value={'export const delete' + props.componentName + ' = (data) => {'} />\r\n                    <CodeLine tab=\"0\" value=\"}\" />\r\n                    <br />\r\n                </>\r\n                :\r\n                <>\r\n                    <CodeLine tab=\"0\" value=\"export const getTest = (data) => {\" />\r\n                    <CodeLine tab=\"1\" value=\"return (dispatch) => {\" />\r\n                    <CodeLine tab=\"2\" value=\"testAPI.testEndpoint(data).then(response => {\" />\r\n                    <CodeLine tab=\"3\" value=\"dispatch(setTest(response));\" />\r\n                    <CodeLine tab=\"2\" value=\"})\" />\r\n                    <CodeLine tab=\"1\" value=\"}\" />\r\n                    <CodeLine tab=\"0\" value=\"}\" />\r\n                </>\r\n            }\r\n            <CodeLine tab=\"0\" value={'export default '+props.componentName[0].toLowerCase()+props.componentName.slice(1)+'Reducer'} />\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nconst ReducerComponent = (props) => {\r\n    console.log('reducerComponentProps', props)\r\n    return (<FileContainer name=\"reducer.js\" collapsed={props.collapsed} body={<ReducerBody isCRUD={props.isCRUD} componentName={props.componentName} />} />)\r\n}\r\n\r\nexport default ReducerComponent;\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport CodeLine from '../code/CodeLine';\r\nimport { Collapse, Button, message} from 'antd';\r\nimport FileContainer from './FileContainer';\r\n\r\nconst { Panel } = Collapse;\r\n\r\nconst ApiBody = () => {\r\n    return (\r\n        <div>\r\n            <CodeLine tab=\"0\" value=\"const baseURL = 'http://127.0.0.1:8000/api/'\" />\r\n            <br />\r\n            <CodeLine tab=\"0\" value=\"const PostOptions = {\" />\r\n            <CodeLine tab=\"1\" value=\"method: 'POST',\" />\r\n            <CodeLine tab=\"1\" value=\"headers: { 'Content-Type': 'application/json' },\" />\r\n            <CodeLine tab=\"1\" value=\"body: JSON.stringify(state)\" />\r\n            <CodeLine tab=\"0\" value=\"}\" />\r\n            <br />\r\n            <CodeLine tab=\"0\" value=\"const GetOptions = {\" />\r\n            <CodeLine tab=\"1\" value=\"method: 'GET',\" />\r\n            <CodeLine tab=\"1\" value=\"headers: { 'Content-Type': 'application/json' },\" />\r\n            <CodeLine tab=\"1\" value=\"body: JSON.stringify(state)\" />\r\n            <CodeLine tab=\"0\" value=\"}\" />\r\n            <br />\r\n            <CodeLine tab=\"0\" value=\"export const testAPI = {\" />\r\n            <CodeLine tab=\"1\" value=\"getTest = (data) => {\" />\r\n            \r\n            <CodeLine tab=\"2\" value=\"fetch(baseURL, PostOptions)\" />\r\n            <CodeLine tab=\"3\" value=\".then((response) => {\" />\r\n            <CodeLine tab=\"4\" value=\"//console.log(response.json());\" />\r\n            <CodeLine tab=\"4\" value=\"return response.json();\" />\r\n            <CodeLine tab=\"3\" value=\"})\" />\r\n            <CodeLine tab=\"3\" value=\".then((data) => {\" />\r\n            <CodeLine tab=\"4\" value=\"//console.log(data);\" />\r\n            <CodeLine tab=\"3\" value=\"})\" />\r\n            <CodeLine tab=\"2\" value=\"}\" />\r\n            <CodeLine tab=\"0\" value=\"}\" />\r\n            \r\n        </div>\r\n    )\r\n}\r\nconst ApiComponent = (props) => {\r\n    return <FileContainer name=\"api.js\" collapsed={props.collapsed} body={<ApiBody />}/>\r\n}\r\n\r\nexport default ApiComponent;\r\n\r\n","import React from 'react'\r\n\r\nconst Tab = (props) => {\r\n    let res = []\r\n    for (let index = 0; index < props.i; index++) {\r\n        res.push(<span key={props.i}>&#160;&#160;&#160;&#160;</span>)\r\n    }\r\n    return res\r\n}\r\n\r\nexport default Tab","import React from 'react'\r\nimport { message } from 'antd';\r\nimport Tab from './Tab';\r\nimport {CopyOutlined} from '@ant-design/icons';\r\n\r\nconst UrlCopyed = (props) => {\r\n    const copy = (value) => {\r\n        navigator.clipboard.writeText(value)\r\n        message.success(value + '- скопирован');\r\n    }\r\n\r\n    return (\r\n        <p>\r\n            { props.pre ? <span>{props.pre} <Tab i=\"1\" /></span> : null}\r\n            <b>{props.value}</b>\r\n            <Tab i=\"1\" />\r\n            <CopyOutlined\r\n                onClick={() => { copy(props.value) }}\r\n            />\r\n            {props.descriptions ?\r\n                <span> {props.descriptions}</span>\r\n                :\r\n                null\r\n            }\r\n        </p>\r\n    )\r\n}\r\n\r\nexport default UrlCopyed;","import React from 'react'\r\nimport { Form, Input, Button, Checkbox } from 'antd';\r\n\r\nconst layout = {\r\n    labelCol: { span: 8 },\r\n    wrapperCol: { span: 16 },\r\n};\r\nconst tailLayout = {\r\n    wrapperCol: { offset: 8, span: 16 },\r\n};\r\n\r\nconst ComponentNameForm = (props) => {\r\n\r\n    const onFinish = (values) => {\r\n        // switch\r\n        props.onFinish(values)\r\n    }\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    return (\r\n        <Form\r\n            {...layout}\r\n            name=\"basic\"\r\n            initialValues={{ remember: true }}\r\n            onFinish={props.onFinish}\r\n            onFinishFailed={onFinishFailed}\r\n        >\r\n            <Form.Item\r\n                label=\"Название компонента\"\r\n                name=\"componentName\"\r\n                rules={[{ required: true, message: 'Введите название компонента!' }]}\r\n            >\r\n                <Input />\r\n            </Form.Item>\r\n\r\n            {/* <Form.Item\r\n                label=\"Password\"\r\n                name=\"password\"\r\n                rules={[{ required: true, message: 'Please input your password!' }]}\r\n            >\r\n                <Input.Password />\r\n            </Form.Item> */}\r\n\r\n            <Form.Item {...tailLayout} name=\"isApi\" valuePropName=\"checked\">\r\n                <Checkbox>Подключить <b>api.js</b></Checkbox>\r\n            </Form.Item>\r\n            <Form.Item {...tailLayout} name=\"isReducer\" valuePropName=\"checked\">\r\n                <Checkbox>Создать <b>testReducer.js</b></Checkbox>\r\n            </Form.Item>\r\n            <Form.Item {...tailLayout} name=\"isCRUD\" valuePropName=\"checked\">\r\n                <Checkbox>Добавить CRUD</Checkbox>\r\n            </Form.Item>\r\n\r\n            <Form.Item {...tailLayout}>\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                    Submit\r\n                </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    );\r\n}\r\n\r\nexport default ComponentNameForm;","import React from 'react'\r\n\r\nconst CreatingNewFiles = (props) => {\r\n\r\n    const getComandLine = () => {\r\n        let comandLine = 'CD src; MD redux; CD redux; echo $null >> store.js; code store.js; CD..;';\r\n        if (props.isApi) {\r\n            comandLine = comandLine+'MD api; CD api; echo $null >> api.js;; code api.js; CD..;'\r\n        }\r\n        if (props.isReducer) {\r\n            comandLine = comandLine+'CD redux; echo $null >> '+props.componentName+'Reducer.js; code '+props.componentName+'Reducer.js; CD..;'\r\n        }\r\n\r\n        comandLine = comandLine+'CD..'// CD.. \r\n        return comandLine\r\n    }\r\n    return (\r\n        <>\r\n            CreatingNewFiles to: {props.componentName}\r\n            <br/>\r\n            {getComandLine()}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CreatingNewFiles\r\n","import React, {useState} from 'react'\r\nimport { Collapse, message } from 'antd'\r\nimport  CodeLine  from './../code/CodeLine';\r\nimport StoreComponent from './../files/Store';\r\nimport ReducerComponent from './../files/Reducer';\r\nimport ApiComponent from './../files/ApiComponent';\r\nimport UrlCopyed from './../code/UrlCopyed'\r\nimport ComponentNameForm from './ComponentNameForm';\r\nimport CreatingNewFiles from './CreatingNewFiles';\r\n\r\nconst { Panel } = Collapse;\r\n\r\nconst ReactComponent = () => {\r\n    const [state, setState] = useState({\r\n        componentName: 'Test',\r\n        isApi: false,\r\n        isReducer: false,\r\n        isCRUD: false\r\n    })\r\n    const [isApi, setIsApi] = useState(false)\r\n    const [store, setStore] = useState(false)\r\n\r\n    const onFinish = (values) => {\r\n        console.log('Success:', values);\r\n        setStore(true)\r\n        setState(values)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Collapse>\r\n                <Panel header=\"Подключение Redux\" key=\"6-1\">\r\n                    <UrlCopyed\r\n                        value=\"npm i react-redux redux redux-thunk -s\"\r\n                        descriptions=\" - Устанавливаем расширения\"\r\n                        pre=\"1)\"\r\n                    />\r\n                    <UrlCopyed\r\n                        value=\"npm i --save-dev @types/react-redux @types/redux @types/redux-thunk\"\r\n                        descriptions=\" - Получаем типы react-redux\"\r\n                        pre=\"2)\"\r\n                    />\r\n\r\n                    <ComponentNameForm onFinish={onFinish}/>\r\n                    <CreatingNewFiles {...state}/>\r\n                    \r\n                    {state.isApi ? <ApiComponent collapsed /> : null}\r\n                    {state.isReducer ? <ReducerComponent collapsed isCRUD={state.isCRUD} componentName={state.componentName}/> : null}\r\n                    {store ? <StoreComponent collapsed componentName={state.componentName} /> : null}\r\n\r\n                    <UrlCopyed\r\n                        value=\"import { Provider } from 'react-redux';\"\r\n                        descriptions=\" - Подключаем Provider компонент App.js\"\r\n                        pre=\"4)\"\r\n                    />\r\n                    <UrlCopyed\r\n                        value=\"<Provider store={store}>\"\r\n                        descriptions=\" - Оборачиваем все в Provider компонент App.js\"\r\n                        pre=\"5)\"\r\n                    />\r\n\r\n                    <UrlCopyed\r\n                        value=\"import store from './redux/store';\"\r\n                        descriptions=\" - Подключаем store\"\r\n                        pre=\"6)\"\r\n                    />\r\n                    <UrlCopyed\r\n                        value=\"CD src; MD redux; CD redux; echo $null >> store.tsx; code store.tsx; CD..; CD.. \"\r\n                        descriptions=\" - Создаем файл store.tsx\"\r\n                        pre=\"6)\"\r\n                    />\r\n                    {/* <UrlCopyed \r\n                                value=\"CD src/redux\" \r\n                                descriptions=\" - переходим в папку redux\"\r\n                                pre=\"6)\"\r\n                            />\r\n                            <UrlCopyed \r\n                                value=\"echo $null >> store.tsx\" \r\n                                descriptions=\" - Создаем файл\"\r\n                                pre=\"7)\"\r\n                            /> */}\r\n\r\n                    {/* <StoreComponent collapsed />\r\n                    <ReducerComponent collapsed />\r\n                    <ApiComponent collapsed /> */}\r\n\r\n                </Panel>\r\n                <Panel header=\"Create React App\" key=\"6-2\">\r\n                    <UrlCopyed\r\n                        value=\"npx create-react-app my-app\"\r\n                        descriptions=\" - Создать приложение\"\r\n                        pre=\"1)\"\r\n                    />\r\n                </Panel>\r\n                <Panel header=\"Router\" key=\"6-3\">\r\n                    <UrlCopyed\r\n                        value=\"npx create-react-app my-app\"\r\n                        descriptions=\" - Создать приложение\"\r\n                        pre=\"1)\"\r\n                    />\r\n                </Panel>\r\n            </Collapse>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ReactComponent;","import React from 'react'\r\nimport { Collapse, message } from 'antd';\r\nimport UrlCopyed from '../code/UrlCopyed';\r\nimport Tab from '../code/Tab';\r\n\r\nconst { Panel } = Collapse;\r\n\r\nconst Laravel = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <UrlCopyed value=\"php artisan make:controller PhotoController --resource\" descriptions=\"Создание ресурсного контроллера\" />\r\n            <Collapse defaultActiveKey={[]} >\r\n                <Panel header=\"Создание модели с контроллером и миграцией\" key=\"4-1\">\r\n                    <UrlCopyed value=\"php artisan make:model Todo -mcr\" descriptions=\"Создание ресурсного контроллера с привязкой к модели и миграцией\" />\r\n                    <span>Создается контроллер, модель, миграция</span>\r\n                    <h5>1. Заполнение модели:</h5>\r\n                    <UrlCopyed\r\n                        value=\"protected $table = 'NameInDB';\"\r\n                        descriptions=\" - Указать название таблици в базе данных\"\r\n                        pre=\"1.1)\"\r\n                    />\r\n                    <UrlCopyed\r\n                        value=\"protected $fillable = ['name', 'user_id', 'date',];\"\r\n                        descriptions=\" - Определить, для каких атрибутов разрешить массовое назначение\"\r\n                        pre=\"1.2)\"\r\n                    />\r\n                    <UrlCopyed\r\n                        value=\"protected $primaryKey = 'flight_id';\"\r\n                        descriptions=\" - Первичные ключи, если id то можно пропустить\"\r\n                        pre=\"1.3)\"\r\n                    />\r\n                    <UrlCopyed\r\n                        value=\"protected $attributes = ['delayed' => false,];\"\r\n                        descriptions=\" - Значения по умолчанию\"\r\n                        pre=\"1.4) \"\r\n                    />\r\n                    <UrlCopyed\r\n                        value=\"use Illuminate\\Database\\Eloquent\\SoftDeletes;\"\r\n                        descriptions=\" - Подключаем для мягкого удаления\"\r\n                        pre=\"1.5.1) \"\r\n                    />\r\n                    <UrlCopyed\r\n                        value=\"use SoftDeletes;\"\r\n                        descriptions=\" - Прописываем в теле класса\"\r\n                        pre=\"1.5.2) \"\r\n                    />\r\n\r\n                    <h5>2. Заполнение Контроллера:</h5>\r\n                    <UrlCopyed\r\n                        value='use App\\Task;'\r\n                        descriptions=\" - Подключить модель в контроллер\"\r\n                        pre=\"2.1) \"\r\n                    />\r\n                    <UrlCopyed\r\n                        value='return response()->json([\r\n                                        \"Tasks\"=> Task::all()\r\n                                        ], 200);'\r\n                        descriptions=\"}\"\r\n                        pre=\"2.2) public function index() {\"\r\n                    />\r\n                    <UrlCopyed\r\n                        value='$newTask = new Task;\r\n                                        $newTask->name = \"test_to \".$request->get(\"user_id\");\r\n                                        $newTask->user_id = $request->get(\"user_id\");\r\n                                        $newTask->date = now();\r\n                                        $newTask->save();'\r\n                        descriptions=\"}\"\r\n                        pre=\"2.3) public function store(Request $request) {\"\r\n                    />\r\n\r\n                    <p>2.4 В методе show() заменить $article на модель и вернуть его</p>\r\n                    <p>2.5) update():</p>\r\n                    <pre>\r\n                        <code>\r\n                            public function update(Request $request, Task $task)<br />\r\n                                        &#123; <br />\r\n                            <Tab i=\"1\" />$fields = $request-&#62;all();<br />\r\n                            <Tab i=\"1\" />foreach ($fields as $field =&#62; $value) &#123;<br />\r\n                            <Tab i=\"2\" />if (isset($task[$field])) &#123; <br />\r\n                            <Tab i=\"3\" />$task[$field] = $value;<br />\r\n                            <Tab i=\"2\" />&#125; else &#123;<br />\r\n                            <Tab i=\"3\" />$message[$field] = 'do not exist';<br />\r\n                            <Tab i=\"2\" />&#125;<br />\r\n                            <Tab i=\"1\" />&#125;<br />\r\n                            <Tab i=\"1\" />$task-&#62;save();<br />\r\n                            <Tab i=\"1\" />if (!isset($message)) &#123;<br />\r\n                            <Tab i=\"2\" />return response()-&#62;json([<br />\r\n                            <Tab i=\"3\" />$task,<br />\r\n                            <Tab i=\"2\" />], 200);<br />\r\n                            <Tab i=\"1\" />&#125; else &#123;<br />\r\n                            <Tab i=\"2\" />return response()-&#62;json(['error'=&#62;true, 'message'=&#62;$message], 401);<br />\r\n                            <Tab i=\"1\" />&#125;<br />\r\n                                        &#125;\r\n                                    </code>\r\n                    </pre>\r\n\r\n                                // Авторизация\r\n\r\n                                <h5>3. Настройка миграции:</h5>\r\n                    <li>php artisan make:migration create_users_table</li>\r\n                    <li>3.1 Прописать филды</li>\r\n                    <Collapse>\r\n                        <Panel header=\"Типы полей:\" key=\"4-1-1\">\r\n                            <UrlCopyed\r\n                                value=\"$table->softDeletes();\"\r\n                                descriptions=\" - Мягкое удаление\"\r\n                                pre=\"1)\"\r\n                            />\r\n                            <UrlCopyed\r\n                                value=\"$table->bigInteger('votes');\"\r\n                                descriptions=\" - Поле BIGINT\"\r\n                                pre=\"2)\"\r\n                            />\r\n                            <UrlCopyed\r\n                                value=\"$table->binary('data');\"\r\n                                descriptions=\" - Поле BLOB\"\r\n                                pre=\"3)\"\r\n                            />\r\n                            <UrlCopyed\r\n                                value=\"$table->boolean('confirmed');\"\r\n                                descriptions=\" - Поле BOOLEAN\"\r\n                                pre=\"4)\"\r\n                            />\r\n                            <UrlCopyed\r\n                                value=\"$table->char('name', 4);\"\r\n                                descriptions=\" - Поле CHAR с указанной длиной\"\r\n                                pre=\"5)\"\r\n                            />\r\n                            <UrlCopyed\r\n                                value=\"$table->date('created_at');\"\r\n                                descriptions=\" - Поле DATE\"\r\n                                pre=\"6)\"\r\n                            />\r\n                            <UrlCopyed\r\n                                value=\"$table->dateTime('created_at');\"\r\n                                descriptions=\" - Поле DATETIME\"\r\n                                pre=\"7)\"\r\n                            />\r\n                            <UrlCopyed\r\n                                value=\"$table->decimal('amount', 5, 2);\"\r\n                                descriptions=\" - Поле DECIMAL с указанной размерностью и точностью\"\r\n                                pre=\"8)\"\r\n                            />\r\n                            <UrlCopyed\r\n                                value=\"$table->double('column', 15, 8);\"\r\n                                descriptions=\" - Поле DOUBLE с указанной точностью\"\r\n                                pre=\"9)\"\r\n                            />\r\n                            <UrlCopyed\r\n                                value=\"$table->enum('choices', array('foo', 'bar'));\"\r\n                                descriptions=\" - Поле ENUM\"\r\n                                pre=\"10)\"\r\n                            />\r\n                            <UrlCopyed\r\n                                value=\"$table->float('amount');\"\r\n                                descriptions=\" - Поле FLOAT\"\r\n                                pre=\"11)\"\r\n                            />\r\n                            <UrlCopyed\r\n                                value=\"$table->increments('id');\"\r\n                                descriptions=\" - Первичный последовательный ключ (autoincrement)\"\r\n                                pre=\"12)\"\r\n                            />\r\n                            <UrlCopyed\r\n                                value=\"$table->integer('votes');\"\r\n                                descriptions=\" - Поле INTEGER\"\r\n                                pre=\"13)\"\r\n                            />\r\n                            <UrlCopyed\r\n                                value=\"$table->longText('description');\"\r\n                                descriptions=\" - Поле LONGTEXT\"\r\n                                pre=\"14)\"\r\n                            />\r\n                            <UrlCopyed\r\n                                value=\"$table->mediumText('description');\"\r\n                                descriptions=\" - Поле MEDIUMTEXT\"\r\n                                pre=\"15)\"\r\n                            />\r\n                            <UrlCopyed\r\n                                value=\"$table->morphs('taggable');\"\r\n                                descriptions=\" - Добавляет INTEGER поле taggable_id и STRING поле taggable_type\"\r\n                                pre=\"16)\"\r\n                            />\r\n                            <UrlCopyed\r\n                                value=\"$table->smallInteger('votes');\"\r\n                                descriptions=\" - Поле SMALLINT\"\r\n                                pre=\"17)\"\r\n                            />\r\n                            <UrlCopyed\r\n                                value=\"$table->string('email');\"\r\n                                descriptions=\" - Поле VARCHAR\"\r\n                                pre=\"18)\"\r\n                            />\r\n                            <UrlCopyed\r\n                                value=\"$table->string('name', 100);\"\r\n                                descriptions=\" - Поле VARCHAR с указанной длиной\"\r\n                                pre=\"19)\"\r\n                            />\r\n                            <UrlCopyed\r\n                                value=\"$table->text('description');\"\r\n                                descriptions=\" - Поле TEXT\"\r\n                                pre=\"20)\"\r\n                            />\r\n                            <UrlCopyed\r\n                                value=\"$table->time('sunrise');\"\r\n                                descriptions=\" - Поле TIME\"\r\n                                pre=\"21)\"\r\n                            />\r\n                            <UrlCopyed\r\n                                value=\"$table->timestamp('added_on');\"\r\n                                descriptions=\" - Поле TIMESTAMP\"\r\n                                pre=\"22)\"\r\n                            />\r\n                            <UrlCopyed\r\n                                value=\"$table->timestamps();\"\r\n                                descriptions=\" - Добавляет поля created_at и updated_at\"\r\n                                pre=\"23)\"\r\n                            />\r\n                            <UrlCopyed\r\n                                value=\"$table->tinyInteger('numbers');\"\r\n                                descriptions=\" - Поле TINYINT\"\r\n                                pre=\"24)\"\r\n                            />\r\n                            <UrlCopyed\r\n                                value=\"$table->rememberToken();\"\r\n                                descriptions=\" - Добавляет поле remember_token с типом VARCHAR(100) NULL\"\r\n                                pre=\"25)\"\r\n                            />\r\n                            <UrlCopyed\r\n                                value=\"$table->nullableTimestamps();\"\r\n                                descriptions=\" - То же, что и timestamps(), но разрешены значения NULL\"\r\n                                pre=\"26)\"\r\n                            />\r\n                        </Panel>\r\n                        <Panel header=\"Свойства полей:\" key=\"4-1-2\">\r\n                            <UrlCopyed\r\n                                value=\"->nullable()\"\r\n                                descriptions=\" - Указывает, что поле может быть NULL\"\r\n                                pre=\"1)\"\r\n                            />\r\n                            <UrlCopyed\r\n                                value=\"->default($value)\"\r\n                                descriptions=\" - Указывает значение по умолчанию для поля\"\r\n                                pre=\"2)\"\r\n                            />\r\n                            <UrlCopyed\r\n                                value=\"->unsigned()\"\r\n                                descriptions=\" - Обозначает беззнаковое число (UNSIGNED)\"\r\n                                pre=\"3)\"\r\n                            />\r\n                        </Panel>\r\n                    </Collapse>\r\n\r\n                    <h5>4. Создание сидера:</h5>\r\n                </Panel>\r\n                <Panel header=\"Изменение модели\" key=\"4-2\">\r\n                    Изменение модели\r\n                        </Panel>\r\n                <Panel header=\"ZMQ\" key=\"4-3\">\r\n                    <UrlCopyed value=\"composer require react/zmq\" descriptions=\"Установка ZMQ на Composer\" />\r\n                </Panel>\r\n                <Panel header=\"Web Soket\" key=\"4-4\"></Panel>\r\n                <Panel header=\"Events\" key=\"4-5\"></Panel>\r\n                <Panel header=\"Auth\" key=\"4-6\"></Panel>\r\n            </Collapse>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Laravel","import React from 'react'\r\nimport { Collapse, message } from 'antd';\r\nimport UrlCopyed from '../code/UrlCopyed';\r\nimport Tab from '../code/Tab';\r\nimport CodeLine from '../code/CodeLine';\r\n\r\nconst { Panel } = Collapse;\r\n\r\nconst CodeToPackege = () => {\r\n    return (\r\n        <>\r\n            <CodeLine tab=\"0\" value='\"scripts\": {' />\r\n            <CodeLine tab=\"1\" value='//...' />\r\n            <CodeLine tab=\"1\" value='\"predeploy\": \"npm run build\",' />\r\n            <CodeLine tab=\"1\" value='\"deploy\": \"gh-pages -d build\",' />\r\n            <CodeLine tab=\"0\" value='},' />\r\n        </>\r\n    )\r\n}\r\n\r\nconst Git = (props) => {\r\n    return (\r\n        <>\r\n            <Collapse defaultActiveKey={[]} >\r\n                <Panel header=\"Загрузка на VDS\" key=\"2-1\">\r\n                    <UrlCopyed\r\n                        value=\"git stash\"\r\n                        descriptions=\" - Схранение изменений в локальном хранилеще с возможностью дальнейшей работы\"\r\n                        pre=\"1)\"\r\n                    />\r\n                    <UrlCopyed\r\n                        value=\"git pull\"\r\n                        descriptions=\" - - Схранение изменений в локальном хранилеще с возможностью дальнейшей работы\"\r\n                        pre=\"2)\"\r\n                    />\r\n                </Panel>\r\n                <Panel header=\"Клонирование с git\" key=\"2-2\">\r\n                    <UrlCopyed\r\n                        value=\"git clone  https://github.com/zharikovartem/OnlinerParserApiServis.git project_name\"\r\n                        descriptions=\" - Клонируем с репозитория\"\r\n                        pre=\"1)\"\r\n                    />\r\n                    <UrlCopyed\r\n                        value=\"cd project_name\"\r\n                        descriptions=\" - Переходим в корневую папку проекта\"\r\n                        pre=\"2)\"\r\n                    />\r\n                    <UrlCopyed\r\n                        value=\"composer install\"\r\n                        descriptions=\" - Устанавливаем composer\"\r\n                        pre=\"3)\"\r\n                    />\r\n                    <p><Tab i=\"1\" /> Переходим в VsCode</p>\r\n                    <UrlCopyed\r\n                        value=\"npm install\"\r\n                        descriptions=\" - Устанавливаем NPM\"\r\n                        pre=\"4)\"\r\n                    />\r\n                    <UrlCopyed\r\n                        value=\"copy .env.example .env\"\r\n                        descriptions=\" - Заменяем файл настроек\"\r\n                        pre=\"5)\"\r\n                    />\r\n                    <p> *)<Tab i=\"1\" /> Для локальной версии: <br />\r\n                        <Tab i=\"2\" /><code>DB_DATABASE=OnlinerParserApiServis</code><br />\r\n                        <Tab i=\"2\" /><code>DB_USERNAME=root</code><br />\r\n                        <Tab i=\"2\" /><code>DB_PASSWORD=</code>\r\n                    </p>\r\n                    <UrlCopyed\r\n                        value=\"php artisan config:clear\"\r\n                        descriptions=\" - Чистим конфиг\"\r\n                        pre=\"6)\"\r\n                    />\r\n                    <UrlCopyed\r\n                        value=\"php artisan config:cache\"\r\n                        descriptions=\" - Чистим кэш\"\r\n                        pre=\"7)\"\r\n                    />\r\n                    <UrlCopyed\r\n                        value=\"php artisan key:generate\"\r\n                        descriptions=\" - Генерируем ключ\"\r\n                        pre=\"8)\"\r\n                    />\r\n                    <UrlCopyed\r\n                        value=\"php artisan migrate\"\r\n                        descriptions=\" - Мегрируем БД\"\r\n                        pre=\"9)\"\r\n                    />\r\n\r\n                </Panel>\r\n                <Panel header=\"Git pages\" key=\"2-3\">\r\n                    <UrlCopyed\r\n                        value=\"npm install gh-pages --save-dev\"\r\n                        descriptions=\" - Устанавливаем пакет gh-pages\"\r\n                        pre=\"1)\"\r\n                    />\r\n                    <UrlCopyed\r\n                        value='\"homepage\": \"https://zharikovartem.github.io/epam-app/\",'\r\n                        descriptions=\" - Добавляем адрес сайта в package.json\"\r\n                        pre=\"2)\"\r\n                    />\r\n                    3)<br/>\r\n                    <CodeToPackege />\r\n                    \r\n                    <UrlCopyed\r\n                        value='git remote add origin git@github.com/zharikovartem/DevGuide'\r\n                        descriptions=\" - add it as remote\"\r\n                        pre=\"4)\"\r\n                    />\r\n                    5) npm run deploy\r\n                    <br/>\r\n                    6) commit\r\n                </Panel>\r\n            </Collapse>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default Git","import React, { useState } from 'react';\r\nimport { Collapse, message } from 'antd';\r\nimport { CopyOutlined} from '@ant-design/icons';\r\nimport  CodeLine  from './code/CodeLine';\r\nimport StoreComponent from './files/Store';\r\nimport ReducerComponent from './files/Reducer';\r\nimport ApiComponent from './files/ApiComponent';\r\nimport ReactComponent from './reactComponent/ReactComponent';\r\nimport Laravel from './Laravel/Laravel';\r\nimport Git from './Git/Git';\r\n\r\nconst { Panel } = Collapse;\r\n\r\nconst Tab = (props) => {\r\n    let res = [];\r\n    for (let index = 0; index < props.i; index++) {\r\n        res.push(<span key={props.i}>&#160;&#160;&#160;&#160;</span>)\r\n    }\r\n    return res;\r\n}\r\n\r\nconst UrlCopyed = (props) => {\r\n    // const [copyed, setCopyed] = useState(null);\r\n    const copy = (value) => {\r\n        navigator.clipboard.writeText(value)\r\n        message.success(value + '- скопирован');\r\n    }\r\n\r\n    return (\r\n        <p>\r\n            { props.pre ? <span>{props.pre} <Tab i=\"1\" /></span> : null}\r\n            <b>{props.value}</b>\r\n            <Tab i=\"1\" />\r\n            <CopyOutlined\r\n                onClick={() => { copy(props.value) }}\r\n            />\r\n            {props.descriptions ?\r\n                <span> {props.descriptions}</span>\r\n                :\r\n                null\r\n            }\r\n        </p>\r\n    )\r\n}\r\n\r\nconst ReadMe = () => {\r\n    const copy = (value) => {\r\n        // console.log(e.target.parentNode)\r\n        navigator.clipboard.writeText(value)\r\n        message.success(value + '- скопирован');\r\n    }\r\n    return (\r\n        <div>\r\n            <h3>Данные для SSH:</h3>\r\n            <p>\r\n                <b>ssh root@81.90.181.175</b> : 74NWWkFFhrGM\r\n                <br />\r\n                <b>ssh testadmin@81.90.181.175</b> : gfhjkm4501\r\n                <br />\r\n                <b>cd ../../var/www/www-root/data/www/crmapiserver.h1n.ru</b> - Перейти в директорию проекта\r\n                <br />\r\n                <b>ls</b> - Показать содержимое каталога (список названий файлов)\r\n            </p>\r\n\r\n            <h3>Данные для VDS:</h3>\r\n            <a href=\"https://artcrmvds.h1n.ru/\">Сайт продакшен</a> - админка\r\n            <br />\r\n            <a href=\"https://81.90.181.175:1500\">https://81.90.181.175:1500</a> - админка\r\n            <br />\r\n            <a href=\"http://81.90.181.175/phpmyadmin/index.php\">http://81.90.181.175/phpmyadmin/index.php</a>\r\n            - База данных\r\n            <br />\r\n            <a href=\"https://81.90.181.175:1500/ispmgr#/list/file/4?path=%2Fvar%2Fwww%2Fwww-root%2Fdata%2Fwww%2Fcrmapiserver.h1n.ru&p_num=1\">Менеджер файлов</a>\r\n\r\n            <h3>Обраить внимание</h3>\r\n            https://ant.design/components/steps/\r\n            <br />\r\n            php artisan make:controller Api/Auth/AuthController\r\n\r\n            <Collapse defaultActiveKey={[]} >\r\n                <Panel header=\"Endpoints\" key=\"1\">\r\n                    <UrlCopyed value=\"http://127.0.0.1:8000/api/getCatalogParts\" descriptions=\"получить спаршенное дерево категорий\" />\r\n                    <UrlCopyed value=\"http://127.0.0.1:8000/api/startCatalogParsing\" descriptions=\"получить список категорий\" />\r\n                    <UrlCopyed value=\"http://127.0.0.1:8000/api/startCatalogItem/hoods\" descriptions=\"получить список товаров выбранной категории\" />\r\n                    <UrlCopyed value=\"http://127.0.0.1:8000/api/startProductParamParsing/hoods\" descriptions=\"Начать парсинг описаний выбранной категории \" />\r\n                    <UrlCopyed value=\"http://127.0.0.1:8000/api/startProductParamParsing/hoods/1\" descriptions=\"Парсинг описаний выбранного по id товара\" />\r\n                    <UrlCopyed value=\"http://127.0.0.1:8000/api/getProductDescriptions/hoods\" descriptions=\"Получить готовые описания для выбранной группы товаров\" />\r\n                </Panel>\r\n                <Panel header=\"Git\" key=\"2\">\r\n                    < Git />\r\n                </Panel>\r\n                <Panel header=\"Artisan\" key=\"3\">\r\n                    <p>\r\n                        <b>php artisan migrate:fresh</b>\r\n                        <CopyOutlined\r\n                            onClick={() => { copy('php artisan migrate:fresh') }}\r\n                        />\r\n                    </p>\r\n                    <p>\r\n                        <b>php artisan queue:work</b>\r\n                        <CopyOutlined\r\n                            onClick={() => { copy('php artisan queue:work') }}\r\n                        />\r\n                    </p>\r\n                    <p>\r\n                        <b>php artisan queue:work --tries=10</b>\r\n                        <CopyOutlined\r\n                            onClick={() => { copy('php artisan queue:work --tries=10') }}\r\n                        />\r\n                    </p>\r\n                    <p>\r\n                        <b>php artisan queue:restart</b>\r\n                        <CopyOutlined\r\n                            onClick={() => { copy('php artisan queue:restart') }}\r\n                        />\r\n                    </p>\r\n                    <UrlCopyed value=\"php artisan queue:work --sleep=5\" descriptions=\"Ждем 5 секунд ???\" />\r\n                    <p>Migrations:</p>\r\n                    <UrlCopyed value=\"php artisan make:migration create_users_table --create=users\" descriptions=\"Создание новой миграции\" />\r\n                    <UrlCopyed value=\"php artisan migrate\" descriptions=\"\" />\r\n                    <p>Controllers:</p>\r\n                    <UrlCopyed value=\"php artisan make:controller Api/Auth/AuthController\" descriptions=\"Создание нового контроллера\" />\r\n                    <p>Models:</p>\r\n\r\n                    <UrlCopyed\r\n                        value=\"php artisan make:model User --migration\"\r\n                        descriptions=\"Создать миграцию БД при создании модели\"\r\n                    />\r\n                    <p>Siders:</p>\r\n                </Panel>\r\n                \r\n                <Panel header=\"Laravel\" key=\"4\">\r\n                    <Laravel />\r\n                </Panel>\r\n                <Panel header=\"Данные для SSH и VDS\" key=\"5\"></Panel>\r\n                <Panel header=\"React\" key=\"6\">\r\n                    <ReactComponent />\r\n                </Panel>\r\n            </Collapse>\r\n\r\n\r\n            jwt-auth secret [INk0XG6ac7zgH2zp1w7Q5EDYqOvKuYVYFmzyhE3TjQr3IowHyDj4uMLop1a11qNb] set successfully.\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ReadMe;","import ReadMe from './components/main';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <ReadMe />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n// import './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport 'antd/dist/antd.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport { Tabs } from 'antd';\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nReactDOM.render(\r\n  // <React.StrictMode>\r\n    <div className=\"container-fluid\">\r\n      <Tabs defaultActiveKey=\"1\">\r\n        <TabPane tab=\"Guide\" key=\"1\">\r\n          <App />\r\n        </TabPane>\r\n        <TabPane tab=\"Dev\" key=\"2\">\r\n\r\n        </TabPane>\r\n      </Tabs>\r\n      \r\n    </div>\r\n  // </React.StrictMode>\r\n  ,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}